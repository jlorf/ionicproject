[{"/home/joel/projecteionic/src/index.tsx":"1","/home/joel/projecteionic/src/serviceWorker.ts":"2","/home/joel/projecteionic/src/App.tsx":"3","/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx":"4","/home/joel/projecteionic/src/pages/AddActivity/AddActivity.tsx":"5","/home/joel/projecteionic/src/pages/Alumnes/Alumnes.tsx":"6","/home/joel/projecteionic/src/components/CompleteActivityModal.tsx":"7","/home/joel/projecteionic/src/pages/Login/Login.tsx":"8","/home/joel/projecteionic/src/data/ContextProvider.tsx":"9","/home/joel/projecteionic/src/data/context.ts":"10","/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx":"11","/home/joel/projecteionic/src/pages/Registrar/Registrar.tsx":"12"},{"size":430,"mtime":1587061951000,"results":"13","hashOfConfig":"14"},{"size":5213,"mtime":1587061951000,"results":"15","hashOfConfig":"14"},{"size":3525,"mtime":1621606080531,"results":"16","hashOfConfig":"14"},{"size":3398,"mtime":1620408110007,"results":"17","hashOfConfig":"14"},{"size":4232,"mtime":1620401311599,"results":"18","hashOfConfig":"14"},{"size":3118,"mtime":1621605007180,"results":"19","hashOfConfig":"14"},{"size":2198,"mtime":1620401443431,"results":"20","hashOfConfig":"14"},{"size":1389,"mtime":1621605044303,"results":"21","hashOfConfig":"14"},{"size":8153,"mtime":1621607886645,"results":"22","hashOfConfig":"14"},{"size":2785,"mtime":1621605065591,"results":"23","hashOfConfig":"14"},{"size":3094,"mtime":1621605026904,"results":"24","hashOfConfig":"14"},{"size":2305,"mtime":1621607939449,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rectwe",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/joel/projecteionic/src/index.tsx",[],["55","56"],"/home/joel/projecteionic/src/serviceWorker.ts",[],"/home/joel/projecteionic/src/App.tsx",["57","58"],"/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx",[],"/home/joel/projecteionic/src/pages/AddActivity/AddActivity.tsx",[],"/home/joel/projecteionic/src/pages/Alumnes/Alumnes.tsx",["59","60","61","62","63","64","65"],"import React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nconst Alumnes: React.FC = () => {\n\n    const [activityToComplete, setActivityToComplete] = useState<Persona>();\n\n    const context = useContext(Context);\n\n    const openCompleteModal = (persona: Persona) => {\n        setActivityToComplete(persona);\n    };\n\n    const closeModal = () => {\n        setActivityToComplete(undefined);\n    };\n\n    if((context.alumnes?.length ?? 0) == 0) context.ObtenirPersones(context, false);\n    return (\n        <React.Fragment>\n            {/* <IonModal isOpen={!!activityToComplete}>\n                <CompleteModalActivity persona={activityToComplete as Persona} dismissModal={closeModal}/>\n            </IonModal> */}\n\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonButtons slot=\"start\">\n                            <IonMenuButton />\n                        </IonButtons>\n                        <IonTitle>Alumnes</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonGrid>\n                        { context.alumnes.map(alumne => (\n                        <IonRow key={alumne.codi.toString()}>\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard>\n                                    {/* <img src={alumne.imageUrl} alt=\"alumne\"/> */}\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>{alumne.Nom}</IonCardSubtitle>\n                                        <IonCardTitle>{alumne.Cognoms}</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <IonItem lines=\"none\">\n                                            {/* { !alumne.professor ?\n                                            <IonButton\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(persona)}>\n                                                Complete alumne\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" icon={checkmarkOutline} />\n                                            } */}\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        ))\n                        }\n                    </IonGrid>\n                </IonContent>\n            </IonPage>\n        </React.Fragment>\n    );\n};\n\nexport default Alumnes;","/home/joel/projecteionic/src/components/CompleteActivityModal.tsx",[],"/home/joel/projecteionic/src/pages/Login/Login.tsx",["66"],"import React, { useContext, useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonLabel, IonList, IonButton } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nexport const Login: React.FC = () => {\n\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const context = useContext(Context);\n\n  if (window.location.href.indexOf(\"logout\") > -1){\n    globalThis.localStorage.clear();\n    window.location.replace('login');\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItem>\n            <IonLabel position=\"floating\">Email</IonLabel>\n            <IonInput value={email} onIonChange={e => setEmail(e.detail.value!)} clearInput type=\"email\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Contrasenya</IonLabel>\n            <IonInput value={password} onIonChange={e => setPassword(e.detail.value!)} clearInput type=\"password\"></IonInput>\n          </IonItem>\n        </IonList>\n        <IonButton expand=\"block\" onClick={() => context.Login(context, email ?? '', password ?? '')}>Login</IonButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Login;","/home/joel/projecteionic/src/data/ContextProvider.tsx",["67","68","69","70","71","72","73"],"/home/joel/projecteionic/src/data/context.ts",["74","75"],"import React from 'react';\nimport * as $ from 'jquery'\n\nexport type ActivityType = 'rest' | 'work' | 'hobby';\n\nexport interface Activity {\n    id: string;\n    title: string;\n    description: string;\n    hour: string;\n    activityType: ActivityType;\n    imageUrl: string;\n    isCompleted: boolean;\n}\n\nexport interface Persona {\n    codi: BigInteger;\n    Nom: string;\n    Cognoms: string;\n    professor: boolean;\n}\n\nexport interface Modul {\n    codi: BigInteger;\n    Nom: string;\n    Abrev: string;\n}\n\nexport interface LoginReturn {\n    message: string;\n    jwt: string;\n}\n\n\nexport interface Validar {\n    message: string;\n    data: {\n        id: string,\n        firstname: string,\n        lastname: string,\n        email: string\n    };\n}\n\nexport interface ContextModel {\n    activities: Activity[];\n    professors: Persona[];\n    alumnes: Persona[];\n    moduls: Modul[];\n    jwt: string;\n    logged: boolean;\n    ObtenirPersones: (ctx: ContextModel, professor: boolean) => void;\n    ObtenirModuls: (ctx: ContextModel) => void;\n    addActivity: (title: string, description: string, activityType: ActivityType) => void;\n    completeActivity: (activityId: string) => void;\n    Login: (ctx: ContextModel, email: string, password: string) => void;\n    Registrar: (ctx: ContextModel, nom: string, cognom: string, email: string, password: string) => void;\n    presentAlert: (titol: string, subtitol: string, text: string, buttons: string[]) => void;\n    ComprovarJWT: (ctx: ContextModel) => boolean;\n}\n\nconst Context = React.createContext<ContextModel>({\n    activities: [],\n    professors: [],\n    alumnes: [],\n    moduls: [],\n    jwt: globalThis.localStorage.getItem('JWT') ?? '',\n    logged: false,\n    addActivity: () => {},\n    completeActivity: () => {},\n    ObtenirPersones: () => {},\n    ObtenirModuls: () => {},\n    Login: () => {},\n    Registrar: () => {},\n    presentAlert: () => {},\n    ComprovarJWT: (ctx: ContextModel) => {\n        var item = globalThis.localStorage.getItem(\"JWT\");\n        ctx.jwt = (item ?? '');\n        var res = $.ajax({\n            method: \"POST\",\n            url: \"http://192.168.2.212/ProjecteGit/JWT/validate_token.php\",\n            data: { jwt: ctx.jwt },\n            async: false\n        }).responseText;\n        debugger;\n        if (res != null && res != undefined){\n        var resJSON = JSON.parse(res);\n            // .done(function(res: Validar) {\n            if (resJSON?.message == \"Access granted.\" && resJSON?.data != null){\n                //activitiesContext.jwt = res.jwt;\n                ctx.logged = true;\n                ctx.jwt = (item ?? '');\n            } else {\n                ctx.logged = false;\n            }\n        } else {\n            ctx.logged = false;\n        }\n        return ctx.logged;\n    }\n});\n\nexport default Context;","/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx",["76","77","78","79","80","81","82"],"import React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nconst Moduls: React.FC = () => {\n\n    const [activityToComplete, setActivityToComplete] = useState<Persona>();\n\n    const context = useContext(Context);\n\n    const openCompleteModal = (persona: Persona) => {\n        setActivityToComplete(persona);\n    };\n\n    const closeModal = () => {\n        setActivityToComplete(undefined);\n    };\n\n    if((context.moduls?.length ?? 0) == 0) context.ObtenirModuls(context);\n    return (\n        <React.Fragment>\n            {/* <IonModal isOpen={!!activityToComplete}>\n                <CompleteModalActivity persona={activityToComplete as Persona} dismissModal={closeModal}/>\n            </IonModal> */}\n\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonButtons slot=\"start\">\n                            <IonMenuButton />\n                        </IonButtons>\n                        <IonTitle>Moduls</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonGrid>\n                        { context.moduls.map(modul => (\n                        <IonRow key={modul.codi.toString()}>\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard>\n                                    {/* <img src={modul.imageUrl} alt=\"modul\"/> */}\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>{modul.Nom}</IonCardSubtitle>\n                                        <IonCardTitle>{modul.Abrev}</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <IonItem lines=\"none\">\n                                            {/* { !modul.professor ?\n                                            <IonButton\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(persona)}>\n                                                Complete modul\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" icon={checkmarkOutline} />\n                                            } */}\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        ))\n                        }\n                    </IonGrid>\n                </IonContent>\n            </IonPage>\n        </React.Fragment>\n    );\n};\n\nexport default Moduls;","/home/joel/projecteionic/src/pages/Registrar/Registrar.tsx",["83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":29,"nodeType":"90","messageId":"91","endLine":1,"endColumn":37},{"ruleId":"88","severity":1,"message":"92","line":30,"column":23,"nodeType":"90","messageId":"91","endLine":30,"endColumn":39},{"ruleId":"88","severity":1,"message":"93","line":2,"column":196,"nodeType":"90","messageId":"91","endLine":2,"endColumn":205},{"ruleId":"88","severity":1,"message":"94","line":2,"column":207,"nodeType":"90","messageId":"91","endLine":2,"endColumn":215},{"ruleId":"88","severity":1,"message":"95","line":2,"column":217,"nodeType":"90","messageId":"91","endLine":2,"endColumn":224},{"ruleId":"88","severity":1,"message":"96","line":7,"column":12,"nodeType":"90","messageId":"91","endLine":7,"endColumn":30},{"ruleId":"88","severity":1,"message":"97","line":11,"column":11,"nodeType":"90","messageId":"91","endLine":11,"endColumn":28},{"ruleId":"88","severity":1,"message":"98","line":15,"column":11,"nodeType":"90","messageId":"91","endLine":15,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":19,"column":39,"nodeType":"101","messageId":"102","endLine":19,"endColumn":41},{"ruleId":"88","severity":1,"message":"103","line":3,"column":19,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"88","severity":1,"message":"104","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":37},{"ruleId":"88","severity":1,"message":"105","line":3,"column":96,"nodeType":"90","messageId":"91","endLine":3,"endColumn":103},{"ruleId":"88","severity":1,"message":"106","line":136,"column":24,"nodeType":"90","messageId":"91","endLine":136,"endColumn":37},{"ruleId":"88","severity":1,"message":"107","line":138,"column":21,"nodeType":"90","messageId":"91","endLine":138,"endColumn":31},{"ruleId":"88","severity":1,"message":"108","line":140,"column":20,"nodeType":"90","messageId":"91","endLine":140,"endColumn":29},{"ruleId":"99","severity":1,"message":"109","line":199,"column":32,"nodeType":"101","messageId":"102","endLine":199,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":202,"column":34,"nodeType":"101","messageId":"102","endLine":202,"endColumn":36},{"ruleId":"99","severity":1,"message":"109","line":86,"column":32,"nodeType":"101","messageId":"102","endLine":86,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":89,"column":34,"nodeType":"101","messageId":"102","endLine":89,"endColumn":36},{"ruleId":"88","severity":1,"message":"93","line":2,"column":196,"nodeType":"90","messageId":"91","endLine":2,"endColumn":205},{"ruleId":"88","severity":1,"message":"94","line":2,"column":207,"nodeType":"90","messageId":"91","endLine":2,"endColumn":215},{"ruleId":"88","severity":1,"message":"95","line":2,"column":217,"nodeType":"90","messageId":"91","endLine":2,"endColumn":224},{"ruleId":"88","severity":1,"message":"96","line":7,"column":12,"nodeType":"90","messageId":"91","endLine":7,"endColumn":30},{"ruleId":"88","severity":1,"message":"97","line":11,"column":11,"nodeType":"90","messageId":"91","endLine":11,"endColumn":28},{"ruleId":"88","severity":1,"message":"98","line":15,"column":11,"nodeType":"90","messageId":"91","endLine":15,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":19,"column":38,"nodeType":"101","messageId":"102","endLine":19,"endColumn":40},{"ruleId":"88","severity":1,"message":"103","line":3,"column":19,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'newspaperOutline' is defined but never used.","'IonButton' is defined but never used.","'IonModal' is defined but never used.","'IonIcon' is defined but never used.","'activityToComplete' is assigned a value but never used.","'openCompleteModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Persona' is defined but never used.","'useContext' is defined but never used.","'Validar' is defined but never used.","'setProfessors' is assigned a value but never used.","'setAlumnes' is assigned a value but never used.","'setModuls' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]