[{"/home/joel/projecteionic/src/index.tsx":"1","/home/joel/projecteionic/src/serviceWorker.ts":"2","/home/joel/projecteionic/src/App.tsx":"3","/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx":"4","/home/joel/projecteionic/src/pages/AddActivity/AddActivity.tsx":"5","/home/joel/projecteionic/src/pages/Alumnes/Alumnes.tsx":"6","/home/joel/projecteionic/src/components/CompleteActivityModal.tsx":"7","/home/joel/projecteionic/src/pages/Login/Login.tsx":"8","/home/joel/projecteionic/src/data/ContextProvider.tsx":"9","/home/joel/projecteionic/src/data/context.ts":"10","/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx":"11","/home/joel/projecteionic/src/pages/Registrar/Registrar.tsx":"12"},{"size":430,"mtime":1587061951000,"results":"13","hashOfConfig":"14"},{"size":5213,"mtime":1587061951000,"results":"15","hashOfConfig":"14"},{"size":3525,"mtime":1621606080531,"results":"16","hashOfConfig":"14"},{"size":3398,"mtime":1620408110007,"results":"17","hashOfConfig":"14"},{"size":4232,"mtime":1620401311599,"results":"18","hashOfConfig":"14"},{"size":3118,"mtime":1621605007180,"results":"19","hashOfConfig":"14"},{"size":2198,"mtime":1620401443431,"results":"20","hashOfConfig":"14"},{"size":1389,"mtime":1621605044303,"results":"21","hashOfConfig":"14"},{"size":8129,"mtime":1621608761313,"results":"22","hashOfConfig":"14"},{"size":2834,"mtime":1621608731239,"results":"23","hashOfConfig":"14"},{"size":4900,"mtime":1621611656830,"results":"24","hashOfConfig":"14"},{"size":2305,"mtime":1621607939449,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rectwe",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/home/joel/projecteionic/src/index.tsx",[],["57","58"],"/home/joel/projecteionic/src/serviceWorker.ts",[],"/home/joel/projecteionic/src/App.tsx",["59","60"],"import React, { useContext, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, IonMenu, IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem, IonIcon, IonLabel, IonMenuToggle } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport AllActivities from './pages/AllActivities/AllActivities';\nimport AddActivity from './pages/AddActivity/AddActivity';\nimport Alumnes from './pages/Alumnes/Alumnes';\nimport Login from './pages/Login/Login';\nimport Moduls from './pages/Moduls/Moduls';\nimport Registrar from './pages/Registrar/Registrar';\nimport { bodyOutline, newspaperOutline } from 'ionicons/icons';\nimport ContextProvider from './data/ContextProvider';\nimport Context from './data/context';\n\nconst App: React.FC = () => {\n\n    const context = useContext(Context);\n    context.ComprovarJWT(context);\n\n    var array = context.logged ? [{ id: \"/alumnes\", comp: \"Alumnes\"}, { id: \"/moduls\", comp: \"Moduls\"}, { id: \"/logout\", comp: \"Logout\"}] : [{ id: \"/login\", comp: \"Login\"}, { id: \"/registrar\", comp: \"Registrar\"}];\n\n    return (\n    <IonApp>\n        <IonReactRouter>\n            <IonMenu contentId='scheduleAppM1'>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonTitle>Projecte</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonList>\n                        {\n                            array.map(item => (\n                                <IonMenuToggle>\n                                    <IonItem routerLink={item.id} routerDirection=\"none\" lines=\"none\">\n                                        <IonIcon color=\"medium\" slot=\"start\" icon={bodyOutline}/>\n                                        <IonLabel>{item.comp}</IonLabel>\n                                    </IonItem>\n                                </IonMenuToggle>\n                            ))\n                        }\n                    </IonList>\n                </IonContent>\n            </IonMenu>\n            <ContextProvider>\n                <IonRouterOutlet id=\"scheduleAppM1\">\n                    <Route path='/all-activities' component={AllActivities} exact />\n                    <Route path='/add-activity' component={AddActivity} exact />\n                    <Route path='/login' component={Login} exact />\n                    <Route path='/registrar' component={Registrar} exact />\n                    <Route path='/logout' component={Login} exact />\n                    <Route path='/alumnes' component={Alumnes} exact />\n                    <Route path='/moduls' component={Moduls} exact />\n                    <Redirect to={context.logged ? '/moduls' : '/login'} />\n                </IonRouterOutlet>\n            </ContextProvider>\n        </IonReactRouter>\n    </IonApp>\n)};\n\nexport default App;","/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx",[],"/home/joel/projecteionic/src/pages/AddActivity/AddActivity.tsx",[],"/home/joel/projecteionic/src/pages/Alumnes/Alumnes.tsx",["61","62","63","64","65","66","67"],"import React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nconst Alumnes: React.FC = () => {\n\n    const [activityToComplete, setActivityToComplete] = useState<Persona>();\n\n    const context = useContext(Context);\n\n    const openCompleteModal = (persona: Persona) => {\n        setActivityToComplete(persona);\n    };\n\n    const closeModal = () => {\n        setActivityToComplete(undefined);\n    };\n\n    if((context.alumnes?.length ?? 0) == 0) context.ObtenirPersones(context, false);\n    return (\n        <React.Fragment>\n            {/* <IonModal isOpen={!!activityToComplete}>\n                <CompleteModalActivity persona={activityToComplete as Persona} dismissModal={closeModal}/>\n            </IonModal> */}\n\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonButtons slot=\"start\">\n                            <IonMenuButton />\n                        </IonButtons>\n                        <IonTitle>Alumnes</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonGrid>\n                        { context.alumnes.map(alumne => (\n                        <IonRow key={alumne.codi.toString()}>\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard>\n                                    {/* <img src={alumne.imageUrl} alt=\"alumne\"/> */}\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>{alumne.Nom}</IonCardSubtitle>\n                                        <IonCardTitle>{alumne.Cognoms}</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <IonItem lines=\"none\">\n                                            {/* { !alumne.professor ?\n                                            <IonButton\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(persona)}>\n                                                Complete alumne\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" icon={checkmarkOutline} />\n                                            } */}\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        ))\n                        }\n                    </IonGrid>\n                </IonContent>\n            </IonPage>\n        </React.Fragment>\n    );\n};\n\nexport default Alumnes;","/home/joel/projecteionic/src/components/CompleteActivityModal.tsx",[],"/home/joel/projecteionic/src/pages/Login/Login.tsx",["68"],"import React, { useContext, useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonLabel, IonList, IonButton } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nexport const Login: React.FC = () => {\n\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const context = useContext(Context);\n\n  if (window.location.href.indexOf(\"logout\") > -1){\n    globalThis.localStorage.clear();\n    window.location.replace('login');\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItem>\n            <IonLabel position=\"floating\">Email</IonLabel>\n            <IonInput value={email} onIonChange={e => setEmail(e.detail.value!)} clearInput type=\"email\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Contrasenya</IonLabel>\n            <IonInput value={password} onIonChange={e => setPassword(e.detail.value!)} clearInput type=\"password\"></IonInput>\n          </IonItem>\n        </IonList>\n        <IonButton expand=\"block\" onClick={() => context.Login(context, email ?? '', password ?? '')}>Login</IonButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Login;","/home/joel/projecteionic/src/data/ContextProvider.tsx",["69","70","71","72","73","74","75"],"import React, { useState, useContext } from 'react';\nimport * as $ from 'jquery'\nimport ActivitiesContext, { Activity, ContextModel, ActivityType, Persona, LoginReturn, Modul, Validar } from './context';\n\nconst ContextProvider: React.FC = (props) => {\n\n    const [activities, setActivities] = useState<Activity[]>([\n        {\n            id: Math.random().toString(),\n            title: 'My daily sleep',\n            description: 'Sleep through the night after a day of quarantine',\n            hour: '23:00',\n            activityType: 'rest',\n            imageUrl: '/assets/images/rest.jpg',\n            isCompleted: false\n        },\n        {\n            id: Math.random().toString(),\n            title: 'Hard work',\n            description: 'Work in the projects I have at Tribalyte',\n            hour: '9:00',\n            activityType: 'work',\n            imageUrl: '/assets/images/work.jpg',\n            isCompleted: false\n        },\n        {\n            id: Math.random().toString(),\n            title: 'Play ping pong',\n            description: 'Play a ping pong match on the hall table!',\n            hour: '19:00',\n            activityType: 'hobby',\n            imageUrl: '/assets/images/hobby.jpg',\n            isCompleted: false\n        }\n    ]);\n\n    const ObtenirPersones = (ctx: ContextModel, professor: boolean) => {\n        var persones = Array<Persona>();\n        $.ajax({\n            method: \"GET\",\n            url: ctx.urlapi + \"/Api/persona/json.php?professor=\" + (professor ? 1 : 0),\n            data: {jwt: ctx.jwt}\n        })\n            .done(function(res) {\n                //console.log(jwt);\n                $.each(res.records, function(i, item : Persona) {\n                    persones.push({\n                        codi: item.codi,\n                        Nom: item.Nom,\n                        Cognoms: item.Cognoms,\n                        professor: item.professor\n                    })\n                  });\n                  if (professor)\n                  {\n                    ctx.professors = persones;\n                  } else {\n                    ctx.alumnes = persones;\n                  }\n            });\n    };\n\n    const ObtenirModuls = (ctx: ContextModel) => {\n        var moduls = Array<Modul>();\n        $.ajax({\n            method: \"GET\",\n            url: ctx.urlapi + \"/Api/modul/api.php\",\n            data: {jwt: ctx.jwt}\n        })\n            .done(function(res) {\n                //console.log(jwt);\n                $.each(res.records, function(i, item : Modul) {\n                    moduls.push({\n                        codi: item.codi,\n                        Nom: item.Nom,\n                        Abrev: item.Abrev\n                    })\n                  });\n                ctx.moduls = moduls;\n            });\n    };\n\n    const Login = (ctx: ContextModel, email: string, password: string) => {\n        $.ajax({\n            method: \"POST\",\n            url: ctx.urlapi + \"/JWT/login.php\",\n            data: { email: email, password: password },\n            error: function (request, status, error) {\n                setLogged(false);\n                presentAlert('Login', 'Error', request.responseText, ['Ok']);\n            }\n        })\n            .done(function(res: LoginReturn) {\n                if (res.jwt){\n                    presentAlert('Login', 'Correcte', res.message, ['Ok']);\n                    //activitiesContext.jwt = res.jwt;\n                    ctx.logged = true;\n                    ctx.jwt = res.jwt;\n                    globalThis.localStorage.setItem('JWT', res.jwt);\n                    window.location.replace('moduls');\n                }\n            });\n    };\n\n    const presentAlert = async function(titol: string, subtitol: string, text: string, buttons: string[]) {\n        const alert = document.createElement('ion-alert');\n        alert.cssClass = 'my-custom-class';\n        alert.header = titol;\n        alert.subHeader = subtitol;\n        alert.message = text;\n        alert.buttons = buttons;\n      \n        document.body.appendChild(alert);\n        await alert.present();\n      \n        const { role } = await alert.onDidDismiss();\n        console.log('onDidDismiss resolved with role', role);\n      }\n      \n\n    const Registrar = (ctx: ContextModel, nom: string, cognom: string, email: string, password: string) => {\n        $.ajax({\n            method: \"POST\",\n            url: ctx.urlapi + \"/JWT/create_user.php\",\n            data: { firstname: nom, lastname: cognom, email: email, password: password },\n            error: function (request, status, error) {\n                presentAlert('Registre', 'Error', request.responseText, ['Ok']);\n            }\n        })\n            .done(function(res: LoginReturn) {\n                ctx.presentAlert(\"Registre\", \"\", res.message, [\"OK\"]);\n                window.location.replace('login');\n            });\n    };\n\n    const [professors, setProfessors] = useState<Persona[]>([]);\n\n    const [alumnes, setAlumnes] = useState<Persona[]>([]);\n\n    const [moduls, setModuls] = useState<Modul[]>([]);\n\n    const addActivity = (title: string, description: string, activityType: ActivityType) => {\n        let imageUrl = '';\n        switch(activityType) {\n            case 'rest':\n                imageUrl = '/assets/images/rest.jpg'\n                break;\n            case 'hobby':\n                imageUrl = '/assets/images/hobby.jpg'\n                break;\n            case 'work':\n                imageUrl = '/assets/images/work.jpg'\n                break;\n            default:\n                imageUrl = '/assets/images/work.jpg'\n                break;\n        };\n\n        const activityDate = new Date();\n        const hour = activityDate.getHours() + ':' + activityDate.getMinutes();\n\n        const addActivity: Activity = {\n            id: Math.random().toString(),\n            title,\n            description,\n            hour,\n            activityType,\n            imageUrl,\n            isCompleted: false\n        };\n\n        setActivities(currActivities => {\n            return [...currActivities, addActivity]\n        })\n    };\n\n    const completeActivity = (activityId: string) => {\n        setActivities(currActivities => {\n            const updatedActivities = [...currActivities];\n            const selectedActivityIndex = activities.findIndex(act => act.id === activityId);\n            const updatedActivity = {...updatedActivities[selectedActivityIndex], isCompleted: true};\n            updatedActivities[selectedActivityIndex] = updatedActivity;\n            return updatedActivities;\n        });\n    };\n\n\n\n    const ComprovarJWT = () => {\n        var item = globalThis.localStorage.getItem(\"JWT\");\n        setJWT(item ?? '');\n        var res = $.ajax({\n            method: \"POST\",\n            url: \"http://192.168.2.212/ProjecteGit/JWT/validate_token.php\",\n            data: { jwt: jwt },\n            async: false\n        }).responseText;\n        debugger;\n        if (res != null && res != undefined){\n        var resJSON = JSON.parse(res);\n            // .done(function(res: Validar) {\n            if (resJSON?.message == \"Access granted.\" && resJSON?.data != null){\n                //activitiesContext.jwt = res.jwt;\n                setLogged(true);\n                setJWT(item ?? '');\n            } else {\n                setLogged(false);\n            }\n        } else {\n            setLogged(false);\n        }\n        return logged;\n    };\n\n    const [jwt, setJWT] = useState<string>('');\n\n    const [logged, setLogged] = useState<boolean>(false);\n\n    const activitiesContext: ContextModel = {\n        activities,\n        addActivity,\n        completeActivity,\n        alumnes,\n        professors,\n        ObtenirPersones,\n        jwt: globalThis.localStorage.getItem(\"JWT\") ?? '',\n        urlapi: 'http://192.168.2.212/ProjecteGit',\n        logged: false,\n        Login,\n        Registrar,\n        presentAlert,\n        moduls,\n        ObtenirModuls,\n        ComprovarJWT\n    };\n\n    return (\n        <ActivitiesContext.Provider value={activitiesContext}>\n            {props.children}\n        </ActivitiesContext.Provider>\n    );\n};\n\nexport default ContextProvider;","/home/joel/projecteionic/src/data/context.ts",["76","77"],"import React from 'react';\nimport * as $ from 'jquery'\n\nexport type ActivityType = 'rest' | 'work' | 'hobby';\n\nexport interface Activity {\n    id: string;\n    title: string;\n    description: string;\n    hour: string;\n    activityType: ActivityType;\n    imageUrl: string;\n    isCompleted: boolean;\n}\n\nexport interface Persona {\n    codi: BigInteger;\n    Nom: string;\n    Cognoms: string;\n    professor: boolean;\n}\n\nexport interface Modul {\n    codi: BigInteger;\n    Nom: string;\n    Abrev: string;\n}\n\nexport interface LoginReturn {\n    message: string;\n    jwt: string;\n}\n\n\nexport interface Validar {\n    message: string;\n    data: {\n        id: string,\n        firstname: string,\n        lastname: string,\n        email: string\n    };\n}\n\nexport interface ContextModel {\n    activities: Activity[];\n    professors: Persona[];\n    alumnes: Persona[];\n    moduls: Modul[];\n    jwt: string;\n    urlapi: string;\n    logged: boolean;\n    ObtenirPersones: (ctx: ContextModel, professor: boolean) => void;\n    ObtenirModuls: (ctx: ContextModel) => void;\n    addActivity: (title: string, description: string, activityType: ActivityType) => void;\n    completeActivity: (activityId: string) => void;\n    Login: (ctx: ContextModel, email: string, password: string) => void;\n    Registrar: (ctx: ContextModel, nom: string, cognom: string, email: string, password: string) => void;\n    presentAlert: (titol: string, subtitol: string, text: string, buttons: string[]) => void;\n    ComprovarJWT: (ctx: ContextModel) => boolean;\n}\n\nconst Context = React.createContext<ContextModel>({\n    activities: [],\n    professors: [],\n    alumnes: [],\n    moduls: [],\n    jwt: globalThis.localStorage.getItem('JWT') ?? '',\n    logged: false,\n    urlapi: 'http://192.168.2.212/ProjecteGit',\n    addActivity: () => {},\n    completeActivity: () => {},\n    ObtenirPersones: () => {},\n    ObtenirModuls: () => {},\n    Login: () => {},\n    Registrar: () => {},\n    presentAlert: () => {},\n    ComprovarJWT: (ctx: ContextModel) => {\n        var item = globalThis.localStorage.getItem(\"JWT\");\n        ctx.jwt = (item ?? '');\n        var res = $.ajax({\n            method: \"POST\",\n            url: ctx.urlapi + \"/JWT/validate_token.php\",\n            data: { jwt: ctx.jwt },\n            async: false\n        }).responseText;\n        debugger;\n        if (res != null && res != undefined){\n        var resJSON = JSON.parse(res);\n            // .done(function(res: Validar) {\n            if (resJSON?.message == \"Access granted.\" && resJSON?.data != null){\n                //activitiesContext.jwt = res.jwt;\n                ctx.logged = true;\n                ctx.jwt = (item ?? '');\n            } else {\n                ctx.logged = false;\n            }\n        } else {\n            ctx.logged = false;\n        }\n        return ctx.logged;\n    }\n});\n\nexport default Context;","/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx",["78","79","80","81","82","83"],"/home/joel/projecteionic/src/pages/Registrar/Registrar.tsx",["84"],"import React, { useContext, useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonInput, IonItem, IonLabel, IonList, IonButton } from '@ionic/react';\nimport Context, { Persona } from '../../data/context';\n\nexport const Registrar: React.FC = () => {\n\n  const [nom, setNom] = useState<string>();\n  const [cognoms, setCognoms] = useState<string>();\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const [password2, setPassword2] = useState<string>();\n  const context = useContext(Context);\n\n  var btnClick = () => {\n    if (password === password2)\n      context.Registrar(context, nom ?? '', cognoms ?? '', email ?? '', password ?? '');\n    else context.presentAlert(\"Error registre\", \"\",\"Les contrasenyes no coincideixen\", [\"OK\"]);\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Registrar</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n        <IonItem>\n            <IonLabel position=\"floating\">Nom</IonLabel>\n            <IonInput value={nom} onIonChange={e => setNom(e.detail.value!)} clearInput type=\"text\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Cognoms</IonLabel>\n            <IonInput value={cognoms} onIonChange={e => setCognoms(e.detail.value!)} clearInput type=\"text\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Email</IonLabel>\n            <IonInput value={email} onIonChange={e => setEmail(e.detail.value!)} clearInput type=\"email\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Contrasenya</IonLabel>\n            <IonInput value={password} onIonChange={e => setPassword(e.detail.value!)} clearInput type=\"password\"></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">Repetir contrasenya</IonLabel>\n            <IonInput value={password2} onIonChange={e => setPassword2(e.detail.value!)} clearInput type=\"password\"></IonInput>\n          </IonItem>\n        </IonList>\n        <IonButton expand=\"block\" onClick={() => btnClick() }>Registrar</IonButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Registrar;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":29,"nodeType":"91","messageId":"92","endLine":1,"endColumn":37},{"ruleId":"89","severity":1,"message":"93","line":30,"column":23,"nodeType":"91","messageId":"92","endLine":30,"endColumn":39},{"ruleId":"89","severity":1,"message":"94","line":2,"column":196,"nodeType":"91","messageId":"92","endLine":2,"endColumn":205},{"ruleId":"89","severity":1,"message":"95","line":2,"column":207,"nodeType":"91","messageId":"92","endLine":2,"endColumn":215},{"ruleId":"89","severity":1,"message":"96","line":2,"column":217,"nodeType":"91","messageId":"92","endLine":2,"endColumn":224},{"ruleId":"89","severity":1,"message":"97","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":30},{"ruleId":"89","severity":1,"message":"98","line":11,"column":11,"nodeType":"91","messageId":"92","endLine":11,"endColumn":28},{"ruleId":"89","severity":1,"message":"99","line":15,"column":11,"nodeType":"91","messageId":"92","endLine":15,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":19,"column":39,"nodeType":"102","messageId":"103","endLine":19,"endColumn":41},{"ruleId":"89","severity":1,"message":"104","line":3,"column":19,"nodeType":"91","messageId":"92","endLine":3,"endColumn":26},{"ruleId":"89","severity":1,"message":"105","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":37},{"ruleId":"89","severity":1,"message":"106","line":3,"column":96,"nodeType":"91","messageId":"92","endLine":3,"endColumn":103},{"ruleId":"89","severity":1,"message":"107","line":136,"column":24,"nodeType":"91","messageId":"92","endLine":136,"endColumn":37},{"ruleId":"89","severity":1,"message":"108","line":138,"column":21,"nodeType":"91","messageId":"92","endLine":138,"endColumn":31},{"ruleId":"89","severity":1,"message":"109","line":140,"column":20,"nodeType":"91","messageId":"92","endLine":140,"endColumn":29},{"ruleId":"100","severity":1,"message":"110","line":199,"column":32,"nodeType":"102","messageId":"103","endLine":199,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":202,"column":34,"nodeType":"102","messageId":"103","endLine":202,"endColumn":36},{"ruleId":"100","severity":1,"message":"110","line":88,"column":32,"nodeType":"102","messageId":"103","endLine":88,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":91,"column":34,"nodeType":"102","messageId":"103","endLine":91,"endColumn":36},{"ruleId":"89","severity":1,"message":"94","line":2,"column":196,"nodeType":"91","messageId":"92","endLine":2,"endColumn":205},{"ruleId":"89","severity":1,"message":"95","line":2,"column":207,"nodeType":"91","messageId":"92","endLine":2,"endColumn":215},{"ruleId":"89","severity":1,"message":"97","line":8,"column":12,"nodeType":"91","messageId":"92","endLine":8,"endColumn":30},{"ruleId":"89","severity":1,"message":"98","line":12,"column":11,"nodeType":"91","messageId":"92","endLine":12,"endColumn":28},{"ruleId":"89","severity":1,"message":"99","line":16,"column":11,"nodeType":"91","messageId":"92","endLine":16,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":28,"column":38,"nodeType":"102","messageId":"103","endLine":28,"endColumn":40},{"ruleId":"89","severity":1,"message":"104","line":3,"column":19,"nodeType":"91","messageId":"92","endLine":3,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'newspaperOutline' is defined but never used.","'IonButton' is defined but never used.","'IonModal' is defined but never used.","'IonIcon' is defined but never used.","'activityToComplete' is assigned a value but never used.","'openCompleteModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Persona' is defined but never used.","'useContext' is defined but never used.","'Validar' is defined but never used.","'setProfessors' is assigned a value but never used.","'setAlumnes' is assigned a value but never used.","'setModuls' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]