{"ast":null,"code":"import { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-2cd7e630.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-a175fa73.js';\nimport './utils-35117408.js';\nimport './index.mjs';\nimport { c as clamp, r as raf } from './helpers-d8b49b57.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport './index-157155ee.js';\nimport './ios.transition-11c6a0fa.js';\nimport './md.transition-3e9127c1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport './index-9af8638a.js';\nimport './overlays-998692a2.js';\nimport { s as sanitizeDOMString } from './index-729ec402.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\nconst HapticEngine = {\n  getEngine() {\n    const win = window;\n    return win.TapticEngine || win.Capacitor && win.Capacitor.Plugins.Haptics;\n  },\n\n  available() {\n    return !!this.getEngine();\n  },\n\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n\n  impact(options) {\n    const engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({\n      style\n    });\n  },\n\n  notification(options) {\n    const engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({\n      style\n    });\n  },\n\n  selection() {\n    this.impact({\n      style: 'light'\n    });\n  },\n\n  selectionStart() {\n    const engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    } else {\n      engine.gestureSelectionStart();\n    }\n  },\n\n  selectionChanged() {\n    const engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    } else {\n      engine.gestureSelectionChanged();\n    }\n  },\n\n  selectionEnd() {\n    const engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    } else {\n      engine.gestureSelectionChanged();\n    }\n  }\n\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\n\nconst hapticImpact = options => {\n  HapticEngine.impact(options);\n};\n\nconst getRefresherAnimationType = contentEl => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\n\nconst createBaseAnimation = pullingRefresherIcon => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  const circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.20,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  const circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.30,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    const arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.30,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nconst createScaleAnimation = pullingRefresherIcon => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `scale(0) translateY(-${height + 20}px)`\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createTranslateAnimation = pullingRefresherIcon => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `translateY(-${height + 20}px)`\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createSnapBackAnimation = pullingRefresherIcon => {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', i <= currentTickToShow ? '0.99' : '0'));\n  });\n};\n\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  const trans = transitionEndAsync(el);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md');\n};\n\nconst transitionEndAsync = el => {\n  return new Promise(resolve => {\n    transitionEnd(el, resolve);\n  });\n};\n\nconst transitionEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = {\n    passive: true\n  };\n\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  const onTransitionEnd = ev => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n\n    unRegTrans = () => {\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    this.disabled = false;\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  checkNativeRefresher() {\n    const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    } else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n\n    this.nativeRefresher = false;\n  }\n\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    } else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'));\n    }\n\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1\n      /* Inactive */\n      ) {\n          return;\n        }\n\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8\n          /* Refreshing */\n          ) {\n              const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n              writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n              return;\n            }\n\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          } // emit \"pulling\" on every move\n\n\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        } // delay showing the next tick marks until user has pulled 30px\n\n\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8\n        /* Refreshing */\n        || currentTickToShow === NUM_TICKS - 1;\n\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({\n              style: 'light'\n            });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        } else {\n          this.state = 2\n          /* Pulling */\n          ;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32\n          /* Completing */\n          );\n          this.needsCompletion = false;\n        } else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = pullingSpinner.shadowRoot.querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = refreshingSpinner.shadowRoot.querySelector('circle');\n\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n\n    this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8\n      /* Refreshing */\n      && this.state !== 32\n      /* Completing */\n      && this.scrollEl.scrollTop === 0,\n      onStart: ev => {\n        ev.data = {\n          animation: undefined,\n          didStart: false,\n          cancelled: false\n        };\n      },\n      onMove: ev => {\n        if (ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2\n          /* Pulling */\n          ;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n        this.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: ev => {\n        if (!ev.data.didStart) {\n          return;\n        }\n\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1\n            /* Inactive */\n            ;\n          });\n          return;\n        }\n\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    } else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n\n    const contentEl = this.el.closest('ion-content');\n\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = contentEl.shadowRoot.querySelector('#background-content');\n\n    if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    } else {\n      this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 10,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd()\n      });\n      this.disabledChanged();\n    }\n  }\n\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n\n\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32\n        /* Completing */\n        )));\n      }\n    } else {\n      this.close(32\n      /* Completing */\n      , '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n\n\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16\n        /* Cancelling */\n        )));\n      }\n    } else {\n      this.close(16\n      /* Cancelling */\n      , '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n\n\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n\n    if (this.state !== 1\n    /* Inactive */\n    ) {\n        return false;\n      } // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n\n\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onStart() {\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    } // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n\n\n    const ev = detail.event;\n\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    } // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n\n\n    if ((this.state & 56\n    /* _BUSY_ */\n    ) !== 0) {\n      return;\n    }\n\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n    // and have not already started dragging\n\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n\n      return;\n    }\n\n    if (this.state === 1\n    /* Inactive */\n    ) {\n        // this refresh is not already actively pulling down\n        // get the content's scrollTop\n        const scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n\n        if (scrollHostScrollTop > 0) {\n          this.progress = 0;\n          return;\n        } // content scrolled all the way to the top, and dragging down\n\n\n        this.state = 2\n        /* Pulling */\n        ;\n      } // prevent native scroll events\n\n\n    if (ev.cancelable) {\n      ev.preventDefault();\n    } // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n\n\n    this.setCss(deltaY, '0ms', true, '');\n\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n\n    const pullMin = this.pullMin; // set pull progress\n\n    this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    } // emit \"pulling\" on every move\n\n\n    this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2\n      /* Pulling */\n      ;\n      return;\n    }\n\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    } // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n\n\n    this.state = 4\n    /* Ready */\n    ;\n    return;\n  }\n\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4\n    /* Ready */\n    ) {\n        // they pulled down far enough, so it's ready to refresh\n        this.beginRefresh();\n      } else if (this.state === 2\n    /* Pulling */\n    ) {\n        // they were pulling down, but didn't pull down far enough\n        // set the content back to it's original location\n        // and close the refresher\n        // set that the refresh is actively cancelling\n        this.cancel();\n      }\n  }\n\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8\n    /* Refreshing */\n    ; // place the content in a hangout position while it thinks\n\n    this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1\n      /* Inactive */\n      ;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600); // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n  }\n\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      slot: \"fixed\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1\n        /* Inactive */\n        ,\n        'refresher-pulling': this.state === 2\n        /* Pulling */\n        ,\n        'refresher-ready': this.state === 4\n        /* Ready */\n        ,\n        'refresher-refreshing': this.state === 8\n        /* Refreshing */\n        ,\n        'refresher-cancelling': this.state === 16\n        /* Cancelling */\n        ,\n        'refresher-completing': this.state === 32\n        /* Completing */\n\n      }\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n};\nRefresher.style = {\n  /*STENCIL:MODE:ios*/\n  ios: refresherIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: refresherMdCss\n};\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: mode\n    }, h(\"div\", {\n      class: \"refresher-pulling\"\n    }, this.pullingIcon && hasSpinner && h(\"div\", {\n      class: \"refresher-pulling-icon\"\n    }, h(\"div\", {\n      class: \"spinner-arrow-container\"\n    }, h(\"ion-spinner\", {\n      name: this.pullingIcon,\n      paused: true\n    }), mode === 'md' && this.pullingIcon === 'circular' && h(\"div\", {\n      class: \"arrow-container\"\n    }, h(\"ion-icon\", {\n      name: \"caret-back-sharp\"\n    })))), this.pullingIcon && !hasSpinner && h(\"div\", {\n      class: \"refresher-pulling-icon\"\n    }, h(\"ion-icon\", {\n      icon: this.pullingIcon,\n      lazy: false\n    })), this.pullingText && h(\"div\", {\n      class: \"refresher-pulling-text\",\n      innerHTML: sanitizeDOMString(this.pullingText)\n    })), h(\"div\", {\n      class: \"refresher-refreshing\"\n    }, this.refreshingSpinner && h(\"div\", {\n      class: \"refresher-refreshing-icon\"\n    }, h(\"ion-spinner\", {\n      name: this.refreshingSpinner\n    })), this.refreshingText && h(\"div\", {\n      class: \"refresher-refreshing-text\",\n      innerHTML: sanitizeDOMString(this.refreshingText)\n    })));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-ios.entry.js"],"names":["w","writeTask","r","registerInstance","d","createEvent","f","readTask","h","e","getElement","H","Host","i","isPlatform","b","getIonMode","c","config","clamp","raf","createAnimation","g","getTimeGivenProgression","s","sanitizeDOMString","S","SPINNERS","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","hapticImpact","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","forEach","el","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","webkitOverflowScrolling","transitionEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","refresherIosCss","refresherMdCss","Refresher","constructor","hostRef","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","ionRefresh","ionPull","ionStart","disabledChanged","gesture","enable","checkNativeRefresher","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","resetNativeRefresher","ani","destroy","setupiOSNativeRefresher","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","pullAmount","floor","shouldShowRefreshingSpinner","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","setupMDNativeRefresher","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","componentDidUpdate","connectedCallback","getAttribute","console","error","getScrollElement","backgroundContentEl","disconnectedCallback","complete","close","cancel","getProgress","detail","event","touches","Number","isNaN","setCss","scrollHostScrollTop","cancelable","preventDefault","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","render","slot","class","watchers","ios","md","RefresherContent","componentWillLoad","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText","ion_refresher","ion_refresher_content"],"mappings":"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","sourcesContent":["import { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-2cd7e630.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-a175fa73.js';\nimport './utils-35117408.js';\nimport './index.mjs';\nimport { c as clamp, r as raf } from './helpers-d8b49b57.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport './index-157155ee.js';\nimport './ios.transition-11c6a0fa.js';\nimport './md.transition-3e9127c1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport './index-9af8638a.js';\nimport './overlays-998692a2.js';\nimport { s as sanitizeDOMString } from './index-729ec402.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nconst getRefresherAnimationType = (contentEl) => {\n    const previousSibling = contentEl.previousElementSibling;\n    const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n    return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n    return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n    const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n    const circle = spinner.shadowRoot.querySelector('circle');\n    const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n    const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n    const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n    const baseAnimation = createAnimation()\n        .duration(1000)\n        .easing('ease-out');\n    const spinnerArrowContainerAnimation = createAnimation()\n        .addElement(spinnerArrowContainer)\n        .keyframes([\n        { offset: 0, opacity: '0.3' },\n        { offset: 0.45, opacity: '0.3' },\n        { offset: 0.55, opacity: '1' },\n        { offset: 1, opacity: '1' }\n    ]);\n    const circleInnerAnimation = createAnimation()\n        .addElement(circle)\n        .keyframes([\n        { offset: 0, strokeDasharray: '1px, 200px' },\n        { offset: 0.20, strokeDasharray: '1px, 200px' },\n        { offset: 0.55, strokeDasharray: '100px, 200px' },\n        { offset: 1, strokeDasharray: '100px, 200px' }\n    ]);\n    const circleOuterAnimation = createAnimation()\n        .addElement(spinner)\n        .keyframes([\n        { offset: 0, transform: 'rotate(-90deg)' },\n        { offset: 1, transform: 'rotate(210deg)' }\n    ]);\n    /**\n     * Only add arrow animation if present\n     * this allows users to customize the spinners\n     * without errors being thrown\n     */\n    if (arrowContainer && arrow) {\n        const arrowContainerAnimation = createAnimation()\n            .addElement(arrowContainer)\n            .keyframes([\n            { offset: 0, transform: 'rotate(0deg)' },\n            { offset: 0.30, transform: 'rotate(0deg)' },\n            { offset: 0.55, transform: 'rotate(280deg)' },\n            { offset: 1, transform: 'rotate(400deg)' }\n        ]);\n        const arrowAnimation = createAnimation()\n            .addElement(arrow)\n            .keyframes([\n            { offset: 0, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n            { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n        ]);\n        baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n    }\n    return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'scale(1) translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n    return createAnimation()\n        .duration(125)\n        .addElement(pullingRefresherIcon)\n        .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n    spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n    writeTask(() => {\n        setSpinnerOpacity(spinner, opacity);\n        ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n    });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n    writeTask(() => {\n        // If user pulls down quickly, the spinner should spin faster\n        spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n        spinner.style.setProperty('opacity', '1');\n    });\n};\nconst translateElement = (el, value) => {\n    if (!el) {\n        return Promise.resolve();\n    }\n    const trans = transitionEndAsync(el);\n    writeTask(() => {\n        el.style.setProperty('transition', '0.2s all ease-out');\n        if (value === undefined) {\n            el.style.removeProperty('transform');\n        }\n        else {\n            el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n        }\n    });\n    return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n    const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    return (pullingSpinner !== null &&\n        refreshingSpinner !== null &&\n        ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n            mode === 'md'));\n};\nconst transitionEndAsync = (el) => {\n    return new Promise(resolve => {\n        transitionEnd(el, resolve);\n    });\n};\nconst transitionEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        this.pointerDown = false;\n        this.needsCompletion = false;\n        this.didRefresh = false;\n        this.lastVelocityY = 0;\n        this.animations = [];\n        this.nativeRefresher = false;\n        /**\n         * The current state which the refresher is in. The refresher's states include:\n         *\n         * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n         * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n         * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n         * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n         * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n         * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n         */\n        this.state = 1 /* Inactive */;\n        /**\n         * The minimum distance the user must pull down until the\n         * refresher will go into the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMin = 60;\n        /**\n         * The maximum distance of the pull until the refresher\n         * will automatically go into the `refreshing` state.\n         * Defaults to the result of `pullMin + 60`.\n         * Does not apply when  the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMax = this.pullMin + 60;\n        /**\n         * Time it takes to close the refresher.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.closeDuration = '280ms';\n        /**\n         * Time it takes the refresher to to snap back to the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.snapbackDuration = '280ms';\n        /**\n         * How much to multiply the pull speed by. To slow the pull animation down,\n         * pass a number less than `1`. To speed up the pull, pass a number greater\n         * than `1`. The default value is `1` which is equal to the speed of the cursor.\n         * If a negative value is passed in, the factor will be `1` instead.\n         *\n         * For example: If the value passed is `1.2` and the content is dragged by\n         * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n         * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n         * will be `8` pixels, less than the amount the cursor has moved.\n         *\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullFactor = 1;\n        /**\n         * If `true`, the refresher will be hidden.\n         */\n        this.disabled = false;\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    checkNativeRefresher() {\n        const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n        if (useNativeRefresher && !this.nativeRefresher) {\n            const contentEl = this.el.closest('ion-content');\n            this.setupNativeRefresher(contentEl);\n        }\n        else if (!useNativeRefresher) {\n            this.destroyNativeRefresher();\n        }\n    }\n    destroyNativeRefresher() {\n        if (this.scrollEl && this.scrollListenerCallback) {\n            this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n            this.scrollListenerCallback = undefined;\n        }\n        this.nativeRefresher = false;\n    }\n    async resetNativeRefresher(el, state) {\n        this.state = state;\n        if (getIonMode(this) === 'ios') {\n            await translateElement(el, undefined);\n        }\n        else {\n            await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'));\n        }\n        this.didRefresh = false;\n        this.needsCompletion = false;\n        this.pointerDown = false;\n        this.animations.forEach(ani => ani.destroy());\n        this.animations = [];\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n        this.elementToTransform = this.scrollEl;\n        const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n        const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        const NUM_TICKS = ticks.length;\n        writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n        this.scrollListenerCallback = () => {\n            // If pointer is not on screen or refresher is not active, ignore scroll\n            if (!this.pointerDown && this.state === 1 /* Inactive */) {\n                return;\n            }\n            readTask(() => {\n                // PTR should only be active when overflow scrolling at the top\n                const scrollTop = this.scrollEl.scrollTop;\n                const refresherHeight = this.el.clientHeight;\n                if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (this.state === 8 /* Refreshing */) {\n                        const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n                        return;\n                    }\n                    writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n                    return;\n                }\n                if (this.pointerDown) {\n                    if (!this.didStart) {\n                        this.didStart = true;\n                        this.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (this.pointerDown) {\n                        this.ionPull.emit();\n                    }\n                }\n                // delay showing the next tick marks until user has pulled 30px\n                const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n                if (shouldShowRefreshingSpinner) {\n                    if (this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n                    }\n                    if (!this.didRefresh) {\n                        this.beginRefresh();\n                        this.didRefresh = true;\n                        hapticImpact({ style: 'light' });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n                        if (!this.pointerDown) {\n                            translateElement(this.elementToTransform, `${refresherHeight}px`);\n                        }\n                    }\n                }\n                else {\n                    this.state = 2 /* Pulling */;\n                    handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                }\n            });\n        };\n        this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            onStart: () => {\n                this.pointerDown = true;\n                if (!this.didRefresh) {\n                    translateElement(this.elementToTransform, '0px');\n                }\n            },\n            onMove: ev => {\n                this.lastVelocityY = ev.velocityY;\n            },\n            onEnd: () => {\n                this.pointerDown = false;\n                this.didStart = false;\n                if (this.needsCompletion) {\n                    this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n                    this.needsCompletion = false;\n                }\n                else if (this.didRefresh) {\n                    readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n                }\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n        const circle = pullingSpinner.shadowRoot.querySelector('circle');\n        const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n        const refreshingCircle = refreshingSpinner.shadowRoot.querySelector('circle');\n        if (circle !== null && refreshingCircle !== null) {\n            writeTask(() => {\n                circle.style.setProperty('animation', 'none');\n                // This lines up the animation on the refreshing spinner with the pulling spinner\n                refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                refreshingCircle.style.setProperty('animation-delay', '-655ms');\n            });\n        }\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n            onStart: (ev) => {\n                ev.data = { animation: undefined, didStart: false, cancelled: false };\n            },\n            onMove: (ev) => {\n                if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                }\n                if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    this.state = 2 /* Pulling */;\n                    writeTask(() => {\n                        const animationType = getRefresherAnimationType(contentEl);\n                        const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n                        this.scrollEl.style.setProperty('--overflow', 'hidden');\n                        animation.progressStart(false, 0);\n                        this.ionStart.emit();\n                        this.animations.push(animation);\n                    });\n                    return;\n                }\n                // Since we are using an easing curve, slow the gesture tracking down a bit\n                this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n                ev.data.animation.progressStep(this.progress);\n                this.ionPull.emit();\n            },\n            onEnd: (ev) => {\n                if (!ev.data.didStart) {\n                    return;\n                }\n                writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n                if (this.progress <= 0.4) {\n                    this.gesture.enable(false);\n                    ev.data.animation\n                        .progressEnd(0, this.progress, 500)\n                        .onFinish(() => {\n                        this.animations.forEach(ani => ani.destroy());\n                        this.animations = [];\n                        this.gesture.enable(true);\n                        this.state = 1 /* Inactive */;\n                    });\n                    return;\n                }\n                const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n                const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                this.animations.push(snapBackAnimation);\n                writeTask(async () => {\n                    pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n                    ev.data.animation.progressEnd();\n                    await snapBackAnimation.play();\n                    this.beginRefresh();\n                    ev.data.animation.destroy();\n                });\n            }\n        });\n        this.disabledChanged();\n    }\n    async setupNativeRefresher(contentEl) {\n        if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n            return;\n        }\n        this.nativeRefresher = true;\n        const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n        const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n        if (getIonMode(this) === 'ios') {\n            this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n        }\n        else {\n            this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n        }\n    }\n    componentDidUpdate() {\n        this.checkNativeRefresher();\n    }\n    async connectedCallback() {\n        if (this.el.getAttribute('slot') !== 'fixed') {\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n            return;\n        }\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-refresher> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.backgroundContentEl = contentEl.shadowRoot.querySelector('#background-content');\n        if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n            this.setupNativeRefresher(contentEl);\n        }\n        else {\n            this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n                el: contentEl,\n                gestureName: 'refresher',\n                gesturePriority: 10,\n                direction: 'y',\n                threshold: 20,\n                passive: false,\n                canStart: () => this.canStart(),\n                onStart: () => this.onStart(),\n                onMove: ev => this.onMove(ev),\n                onEnd: () => this.onEnd(),\n            });\n            this.disabledChanged();\n        }\n    }\n    disconnectedCallback() {\n        this.destroyNativeRefresher();\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    async complete() {\n        if (this.nativeRefresher) {\n            this.needsCompletion = true;\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n            }\n        }\n        else {\n            this.close(32 /* Completing */, '120ms');\n        }\n    }\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    async cancel() {\n        if (this.nativeRefresher) {\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n            }\n        }\n        else {\n            this.close(16 /* Cancelling */, '');\n        }\n    }\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    getProgress() {\n        return Promise.resolve(this.progress);\n    }\n    canStart() {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    }\n    onStart() {\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    onMove(detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        const ev = detail.event;\n        if (ev.touches && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* _BUSY_ */) !== 0) {\n            return;\n        }\n        const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n        const deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        const pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* Ready */;\n        return;\n    }\n    onEnd() {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n    }\n    beginRefresh() {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this)\n        });\n    }\n    close(state, delay) {\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(() => {\n            this.state = 1 /* Inactive */;\n            this.progress = 0;\n            this.didStart = false;\n            this.setCss(0, '0ms', false, '');\n        }, 600);\n        // reset set the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n        // TODO: stop gesture\n    }\n    setCss(y, duration, overflowVisible, delay) {\n        if (this.nativeRefresher) {\n            return;\n        }\n        this.appliedStyles = (y > 0);\n        writeTask(() => {\n            if (this.scrollEl && this.backgroundContentEl) {\n                const scrollStyle = this.scrollEl.style;\n                const backgroundStyle = this.backgroundContentEl.style;\n                scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n                scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n                scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n                scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n            }\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`refresher-${mode}`]: true,\n                'refresher-native': this.nativeRefresher,\n                'refresher-active': this.state !== 1 /* Inactive */,\n                'refresher-pulling': this.state === 2 /* Pulling */,\n                'refresher-ready': this.state === 4 /* Ready */,\n                'refresher-refreshing': this.state === 8 /* Refreshing */,\n                'refresher-cancelling': this.state === 16 /* Cancelling */,\n                'refresher-completing': this.state === 32 /* Completing */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nRefresher.style = {\n    /*STENCIL:MODE:ios*/ ios: refresherIosCss,\n    /*STENCIL:MODE:md*/ md: refresherMdCss\n};\n\nconst RefresherContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            const mode = getIonMode(this);\n            const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n                h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n            h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n            h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n            h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"]},"metadata":{},"sourceType":"module"}