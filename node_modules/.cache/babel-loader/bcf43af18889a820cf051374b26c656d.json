{"ast":null,"code":"import { r as raf } from './helpers-d8b49b57.js';\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\n\nconst processKeyframes = keyframes => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        } else {\n          const newKey = convertCamelCaseToHypen(key);\n\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\n\nconst convertCamelCaseToHypen = str => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nlet animationPrefix;\n\nconst getAnimationPrefix = el => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n\n  return animationPrefix;\n};\n\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\n\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\n\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = {\n    passive: true\n  };\n\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  const onTransitionEnd = ev => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n\n    for (const property in keyframe) {\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\n\nconst keyframeIds = [];\n\nconst generateKeyframeName = keyframeRules => {\n  let index = keyframeIds.indexOf(keyframeRules);\n\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n\n  return `ion-animation-${index}`;\n};\n\nconst getStyleContainer = element => {\n  const rootNode = element.getRootNode();\n  return rootNode.head || rootNode;\n};\n\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n\n  const stylesheet = (element.ownerDocument || document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\n\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n\n  return classes;\n}; // TODO: Add more tests. until then, be sure to manually test menu and swipe to go back/routing transitions\n\n\nconst createAnimation = animationId => {\n  let _delay;\n\n  let _duration;\n\n  let _easing;\n\n  let _iterations;\n\n  let _fill;\n\n  let _direction;\n\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function';\n  const supportsWebAnimations = typeof Element === 'function' && typeof Element.prototype.animate === 'function' && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n\n  const destroy = () => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy();\n    });\n    cleanUp();\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n\n\n  const cleanUp = () => {\n    cleanUpElements();\n    cleanUpStyleSheets();\n  };\n\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n  };\n\n  const onFinish = (callback, opts) => {\n    const callbacks = opts && opts.oneTimeCallback ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n\n\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    } else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n\n\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet && stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n\n  const beforeAddRead = readFn => {\n    _beforeAddReadFunctions.push(readFn);\n\n    return ani;\n  };\n\n  const beforeAddWrite = writeFn => {\n    _beforeAddWriteFunctions.push(writeFn);\n\n    return ani;\n  };\n\n  const afterAddRead = readFn => {\n    _afterAddReadFunctions.push(readFn);\n\n    return ani;\n  };\n\n  const afterAddWrite = writeFn => {\n    _afterAddWriteFunctions.push(writeFn);\n\n    return ani;\n  };\n\n  const beforeAddClass = className => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n\n  const beforeRemoveClass = className => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n\n\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n\n\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n\n    return ani;\n  };\n\n  const afterAddClass = className => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n\n  const afterRemoveClass = className => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n\n    return ani;\n  };\n\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n\n    return 'both';\n  };\n\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n\n    if (_direction !== undefined) {\n      return _direction;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n\n    return 'normal';\n  };\n\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n\n    if (_easing !== undefined) {\n      return _easing;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n\n    return 'linear';\n  };\n\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n\n    if (_duration !== undefined) {\n      return _duration;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n\n    return 0;\n  };\n\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n\n    return 1;\n  };\n\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n\n    if (_delay !== undefined) {\n      return _delay;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n\n    return 0;\n  };\n\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n\n  const direction = animationDirection => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n\n  const fill = animationFill => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n\n  const delay = animationDelay => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n\n  const easing = animationEasing => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n\n  const duration = animationDuration => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n\n  const iterations = animationIterations => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n\n  const parent = animation => {\n    parentAnimation = animation;\n    return ani;\n  };\n\n  const addElement = el => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      } else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      } else {\n        console.error('Invalid addElement value');\n      }\n    }\n\n    return ani;\n  };\n\n  const addAnimation = animationToAdd => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      } else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n\n    return ani;\n  };\n\n  const keyframes = keyframeValues => {\n    _keyframes = keyframeValues;\n    return ani;\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n\n\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback()); // Runs all before write callbacks\n\n\n    _beforeAddWriteFunctions.forEach(callback => callback()); // Updates styles and classes before animation runs\n\n\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n\n\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout(); // Runs all after read callbacks\n\n    _afterAddReadFunctions.forEach(callback => callback()); // Runs all after write callbacks\n\n\n    _afterAddWriteFunctions.forEach(callback => callback()); // Updates styles and classes before animation ends\n\n\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n\n    if (willComplete) {\n      finished = true;\n    }\n\n    willComplete = true;\n  };\n\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n\n    numAnimationsRunning--;\n\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      } else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n\n    initialized = true;\n  };\n\n  const setAnimationStep = step => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    } else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n\n  const updateWebAnimation = step => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    } else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n\n    return ani;\n  };\n\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n\n    if (!initialized) {\n      initializeAnimation();\n    } else {\n      update(false, true, step);\n    }\n\n    return ani;\n  };\n\n  const progressStep = step => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n\n    finished = false; // tslint:disable-next-line: strict-boolean-conditions\n\n    willComplete = true;\n\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      } else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    } else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      } else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true\n      });\n\n      if (!parentAnimation) {\n        play();\n      }\n    }\n\n    return ani;\n  };\n\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      } else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n    }\n  };\n\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    } else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1; // No need to set a timeout when animation has infinite iterations\n\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         *\n         * TODO: Is there a cleaner way to do this?\n         */\n\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    } else {\n      updateCSSAnimation();\n    }\n  };\n\n  const play = opts => {\n    return new Promise(resolve => {\n      if (opts && opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, {\n          oneTimeCallback: true\n        });\n      }\n\n      if (!initialized) {\n        initializeAnimation();\n      }\n\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n\n      onFinish(() => resolve(), {\n        oneTimeCallback: true\n      });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      } else {\n        playCSSAnimations();\n      }\n    });\n  };\n\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n\n    resetFlags();\n  };\n\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    } else {\n      _keyframes = [{\n        offset: 0,\n        [property]: value\n      }, ..._keyframes];\n    }\n\n    return ani;\n  };\n\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    } else {\n      _keyframes = [..._keyframes, {\n        offset: 1,\n        [property]: value\n      }];\n    }\n\n    return ani;\n  };\n\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\n\nexport { createAnimation as c };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/animation-f72ade61.js"],"names":["r","raf","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","animationPrefix","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","parentAnimation","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","willComplete","finished","shouldCalculateNumAnimations","ani","onFinishCallbacks","onFinishOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","window","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","onFinish","callbacks","oneTimeCallback","c","o","animation","cancel","elementsArray","slice","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","initializeCSSAnimation","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","effect","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"mappings":"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","sourcesContent":["import { r as raf } from './helpers-d8b49b57.js';\n\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n    keyframes.forEach(keyframe => {\n        for (const key in keyframe) {\n            if (keyframe.hasOwnProperty(key)) {\n                const value = keyframe[key];\n                if (key === 'easing') {\n                    const newKey = 'animation-timing-function';\n                    keyframe[newKey] = value;\n                    delete keyframe[key];\n                }\n                else {\n                    const newKey = convertCamelCaseToHypen(key);\n                    if (newKey !== key) {\n                        keyframe[newKey] = value;\n                        delete keyframe[key];\n                    }\n                }\n            }\n        }\n    });\n    return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nlet animationPrefix;\nconst getAnimationPrefix = (el) => {\n    if (animationPrefix === undefined) {\n        const supportsUnprefixed = el.style.animationName !== undefined;\n        const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n        animationPrefix = (!supportsUnprefixed && supportsWebkitPrefix) ? '-webkit-' : '';\n    }\n    return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n        el.addEventListener('animationend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n            el.removeEventListener('animationend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nconst generateKeyframeRules = (keyframes = []) => {\n    return keyframes.map(keyframe => {\n        const offset = keyframe.offset;\n        const frameString = [];\n        for (const property in keyframe) {\n            if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n                frameString.push(`${property}: ${keyframe[property]};`);\n            }\n        }\n        return `${offset * 100}% { ${frameString.join(' ')} }`;\n    }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n    let index = keyframeIds.indexOf(keyframeRules);\n    if (index < 0) {\n        index = (keyframeIds.push(keyframeRules) - 1);\n    }\n    return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n    const rootNode = element.getRootNode();\n    return (rootNode.head || rootNode);\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n    const styleContainer = getStyleContainer(element);\n    const keyframePrefix = getAnimationPrefix(element);\n    const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n    if (existingStylesheet) {\n        return existingStylesheet;\n    }\n    const stylesheet = (element.ownerDocument || document).createElement('style');\n    stylesheet.id = keyframeName;\n    stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n    styleContainer.appendChild(stylesheet);\n    return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n    if (className !== undefined) {\n        const classNameToAppend = (Array.isArray(className)) ? className : [className];\n        return [...classes, ...classNameToAppend];\n    }\n    return classes;\n};\n\n// TODO: Add more tests. until then, be sure to manually test menu and swipe to go back/routing transitions\nconst createAnimation = (animationId) => {\n    let _delay;\n    let _duration;\n    let _easing;\n    let _iterations;\n    let _fill;\n    let _direction;\n    let _keyframes = [];\n    let beforeAddClasses = [];\n    let beforeRemoveClasses = [];\n    let initialized = false;\n    let parentAnimation;\n    let beforeStylesValue = {};\n    let afterAddClasses = [];\n    let afterRemoveClasses = [];\n    let afterStylesValue = {};\n    let numAnimationsRunning = 0;\n    let shouldForceLinearEasing = false;\n    let shouldForceSyncPlayback = false;\n    let cssAnimationsTimerFallback;\n    let forceDirectionValue;\n    let forceDurationValue;\n    let forceDelayValue;\n    let willComplete = true;\n    let finished = false;\n    let shouldCalculateNumAnimations = true;\n    let keyframeName;\n    let ani;\n    const id = animationId;\n    const onFinishCallbacks = [];\n    const onFinishOneTimeCallbacks = [];\n    const elements = [];\n    const childAnimations = [];\n    const stylesheets = [];\n    const _beforeAddReadFunctions = [];\n    const _beforeAddWriteFunctions = [];\n    const _afterAddReadFunctions = [];\n    const _afterAddWriteFunctions = [];\n    const webAnimations = [];\n    const supportsAnimationEffect = (typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function');\n    const supportsWebAnimations = (typeof Element === 'function') && (typeof Element.prototype.animate === 'function') && supportsAnimationEffect;\n    const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n    const getWebAnimations = () => {\n        return webAnimations;\n    };\n    const destroy = () => {\n        childAnimations.forEach(childAnimation => {\n            childAnimation.destroy();\n        });\n        cleanUp();\n        elements.length = 0;\n        childAnimations.length = 0;\n        _keyframes.length = 0;\n        clearOnFinish();\n        initialized = false;\n        shouldCalculateNumAnimations = true;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations, removes\n     * any animation properties from the\n     * animation's elements, and removes the\n     * animation's stylesheets from the DOM.\n     */\n    const cleanUp = () => {\n        cleanUpElements();\n        cleanUpStyleSheets();\n    };\n    const resetFlags = () => {\n        shouldForceLinearEasing = false;\n        shouldForceSyncPlayback = false;\n        shouldCalculateNumAnimations = true;\n        forceDirectionValue = undefined;\n        forceDurationValue = undefined;\n        forceDelayValue = undefined;\n        numAnimationsRunning = 0;\n        finished = false;\n        willComplete = true;\n    };\n    const onFinish = (callback, opts) => {\n        const callbacks = (opts && opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n        callbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const clearOnFinish = () => {\n        onFinishCallbacks.length = 0;\n        onFinishOneTimeCallbacks.length = 0;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations and removes\n     * any animation properties from the\n     * the animation's elements.\n     */\n    const cleanUpElements = () => {\n        if (supportsWebAnimations) {\n            webAnimations.forEach(animation => {\n                animation.cancel();\n            });\n            webAnimations.length = 0;\n        }\n        else {\n            const elementsArray = elements.slice();\n            raf(() => {\n                elementsArray.forEach(element => {\n                    removeStyleProperty(element, 'animation-name');\n                    removeStyleProperty(element, 'animation-duration');\n                    removeStyleProperty(element, 'animation-timing-function');\n                    removeStyleProperty(element, 'animation-iteration-count');\n                    removeStyleProperty(element, 'animation-delay');\n                    removeStyleProperty(element, 'animation-play-state');\n                    removeStyleProperty(element, 'animation-fill-mode');\n                    removeStyleProperty(element, 'animation-direction');\n                });\n            });\n        }\n    };\n    /**\n     * Removes the animation's stylesheets\n     * from the DOM.\n     */\n    const cleanUpStyleSheets = () => {\n        stylesheets.forEach(stylesheet => {\n            /**\n             * When sharing stylesheets, it's possible\n             * for another animation to have already\n             * cleaned up a particular stylesheet\n             */\n            if (stylesheet && stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        });\n        stylesheets.length = 0;\n    };\n    const beforeAddRead = (readFn) => {\n        _beforeAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const beforeAddWrite = (writeFn) => {\n        _beforeAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const afterAddRead = (readFn) => {\n        _afterAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const afterAddWrite = (writeFn) => {\n        _afterAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const beforeAddClass = (className) => {\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\n        return ani;\n    };\n    const beforeRemoveClass = (className) => {\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n        return ani;\n    };\n    /**\n     * Set CSS inline styles to the animation's\n     * elements before the animation begins.\n     */\n    const beforeStyles = (styles = {}) => {\n        beforeStylesValue = styles;\n        return ani;\n    };\n    /**\n     * Clear CSS inline styles from the animation's\n     * elements before the animation begins.\n     */\n    const beforeClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            beforeStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const afterAddClass = (className) => {\n        afterAddClasses = addClassToArray(afterAddClasses, className);\n        return ani;\n    };\n    const afterRemoveClass = (className) => {\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n        return ani;\n    };\n    const afterStyles = (styles = {}) => {\n        afterStylesValue = styles;\n        return ani;\n    };\n    const afterClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            afterStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const getFill = () => {\n        if (_fill !== undefined) {\n            return _fill;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getFill();\n        }\n        return 'both';\n    };\n    const getDirection = () => {\n        if (forceDirectionValue !== undefined) {\n            return forceDirectionValue;\n        }\n        if (_direction !== undefined) {\n            return _direction;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDirection();\n        }\n        return 'normal';\n    };\n    const getEasing = () => {\n        if (shouldForceLinearEasing) {\n            return 'linear';\n        }\n        if (_easing !== undefined) {\n            return _easing;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getEasing();\n        }\n        return 'linear';\n    };\n    const getDuration = () => {\n        if (shouldForceSyncPlayback) {\n            return 0;\n        }\n        if (forceDurationValue !== undefined) {\n            return forceDurationValue;\n        }\n        if (_duration !== undefined) {\n            return _duration;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDuration();\n        }\n        return 0;\n    };\n    const getIterations = () => {\n        if (_iterations !== undefined) {\n            return _iterations;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getIterations();\n        }\n        return 1;\n    };\n    const getDelay = () => {\n        if (forceDelayValue !== undefined) {\n            return forceDelayValue;\n        }\n        if (_delay !== undefined) {\n            return _delay;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDelay();\n        }\n        return 0;\n    };\n    const getKeyframes = () => {\n        return _keyframes;\n    };\n    const direction = (animationDirection) => {\n        _direction = animationDirection;\n        update(true);\n        return ani;\n    };\n    const fill = (animationFill) => {\n        _fill = animationFill;\n        update(true);\n        return ani;\n    };\n    const delay = (animationDelay) => {\n        _delay = animationDelay;\n        update(true);\n        return ani;\n    };\n    const easing = (animationEasing) => {\n        _easing = animationEasing;\n        update(true);\n        return ani;\n    };\n    const duration = (animationDuration) => {\n        /**\n         * CSS Animation Durations of 0ms work fine on Chrome\n         * but do not run on Safari, so force it to 1ms to\n         * get it to run on both platforms.\n         */\n        if (!supportsWebAnimations && animationDuration === 0) {\n            animationDuration = 1;\n        }\n        _duration = animationDuration;\n        update(true);\n        return ani;\n    };\n    const iterations = (animationIterations) => {\n        _iterations = animationIterations;\n        update(true);\n        return ani;\n    };\n    const parent = (animation) => {\n        parentAnimation = animation;\n        return ani;\n    };\n    const addElement = (el) => {\n        if (el != null) {\n            if (el.nodeType === 1) {\n                elements.push(el);\n            }\n            else if (el.length >= 0) {\n                for (let i = 0; i < el.length; i++) {\n                    elements.push(el[i]);\n                }\n            }\n            else {\n                console.error('Invalid addElement value');\n            }\n        }\n        return ani;\n    };\n    const addAnimation = (animationToAdd) => {\n        if (animationToAdd != null) {\n            if (Array.isArray(animationToAdd)) {\n                for (const animation of animationToAdd) {\n                    animation.parent(ani);\n                    childAnimations.push(animation);\n                }\n            }\n            else {\n                animationToAdd.parent(ani);\n                childAnimations.push(animationToAdd);\n            }\n        }\n        return ani;\n    };\n    const keyframes = (keyframeValues) => {\n        _keyframes = keyframeValues;\n        return ani;\n    };\n    /**\n     * Run all \"before\" animation hooks.\n     */\n    const beforeAnimation = () => {\n        // Runs all before read callbacks\n        _beforeAddReadFunctions.forEach(callback => callback());\n        // Runs all before write callbacks\n        _beforeAddWriteFunctions.forEach(callback => callback());\n        // Updates styles and classes before animation runs\n        const addClasses = beforeAddClasses;\n        const removeClasses = beforeRemoveClasses;\n        const styles = beforeStylesValue;\n        elements.forEach(el => {\n            const elementClassList = el.classList;\n            addClasses.forEach(c => elementClassList.add(c));\n            removeClasses.forEach(c => elementClassList.remove(c));\n            for (const property in styles) {\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"after\" animation hooks.\n     */\n    const afterAnimation = () => {\n        clearCSSAnimationsTimeout();\n        // Runs all after read callbacks\n        _afterAddReadFunctions.forEach(callback => callback());\n        // Runs all after write callbacks\n        _afterAddWriteFunctions.forEach(callback => callback());\n        // Updates styles and classes before animation ends\n        const currentStep = willComplete ? 1 : 0;\n        const addClasses = afterAddClasses;\n        const removeClasses = afterRemoveClasses;\n        const styles = afterStylesValue;\n        elements.forEach(el => {\n            const elementClassList = el.classList;\n            addClasses.forEach(c => elementClassList.add(c));\n            removeClasses.forEach(c => elementClassList.remove(c));\n            for (const property in styles) {\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n        onFinishCallbacks.forEach(onFinishCallback => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.length = 0;\n        shouldCalculateNumAnimations = true;\n        if (willComplete) {\n            finished = true;\n        }\n        willComplete = true;\n    };\n    const animationFinish = () => {\n        if (numAnimationsRunning === 0) {\n            return;\n        }\n        numAnimationsRunning--;\n        if (numAnimationsRunning === 0) {\n            afterAnimation();\n            if (parentAnimation) {\n                parentAnimation.animationFinish();\n            }\n        }\n    };\n    const initializeCSSAnimation = (toggleAnimationName = true) => {\n        cleanUpStyleSheets();\n        const processedKeyframes = processKeyframes(_keyframes);\n        elements.forEach(element => {\n            if (processedKeyframes.length > 0) {\n                const keyframeRules = generateKeyframeRules(processedKeyframes);\n                keyframeName = (animationId !== undefined) ? animationId : generateKeyframeName(keyframeRules);\n                const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n                stylesheets.push(stylesheet);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill());\n                setStyleProperty(element, 'animation-direction', getDirection());\n                const iterationsCount = (getIterations() === Infinity)\n                    ? 'infinite'\n                    : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                setStyleProperty(element, 'animation-play-state', 'paused');\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', stylesheet.id || null);\n                });\n            }\n        });\n    };\n    const initializeWebAnimation = () => {\n        elements.forEach(element => {\n            const animation = element.animate(_keyframes, {\n                id,\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection()\n            });\n            animation.pause();\n            webAnimations.push(animation);\n        });\n        if (webAnimations.length > 0) {\n            webAnimations[0].onfinish = () => {\n                animationFinish();\n            };\n        }\n    };\n    const initializeAnimation = (toggleAnimationName = true) => {\n        beforeAnimation();\n        if (_keyframes.length > 0) {\n            if (supportsWebAnimations) {\n                initializeWebAnimation();\n            }\n            else {\n                initializeCSSAnimation(toggleAnimationName);\n            }\n        }\n        initialized = true;\n    };\n    const setAnimationStep = (step) => {\n        step = Math.min(Math.max(step, 0), 0.9999);\n        if (supportsWebAnimations) {\n            webAnimations.forEach(animation => {\n                animation.currentTime = animation.effect.getComputedTiming().delay + (getDuration() * step);\n                animation.pause();\n            });\n        }\n        else {\n            const animationDuration = `-${getDuration() * step}ms`;\n            elements.forEach(element => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-delay', animationDuration);\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                }\n            });\n        }\n    };\n    const updateWebAnimation = (step) => {\n        webAnimations.forEach(animation => {\n            animation.effect.updateTiming({\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection()\n            });\n        });\n        if (step !== undefined) {\n            setAnimationStep(step);\n        }\n    };\n    const updateCSSAnimation = (toggleAnimationName = true, step) => {\n        raf(() => {\n            elements.forEach(element => {\n                setStyleProperty(element, 'animation-name', keyframeName || null);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', (step !== undefined) ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n                setStyleProperty(element, 'animation-direction', getDirection() || null);\n                const iterationsCount = (getIterations() === Infinity)\n                    ? 'infinite'\n                    : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', keyframeName || null);\n                });\n            });\n        });\n    };\n    const update = (deep = false, toggleAnimationName = true, step) => {\n        if (deep) {\n            childAnimations.forEach(animation => {\n                animation.update(deep, toggleAnimationName, step);\n            });\n        }\n        if (supportsWebAnimations) {\n            updateWebAnimation(step);\n        }\n        else {\n            updateCSSAnimation(toggleAnimationName, step);\n        }\n        return ani;\n    };\n    const progressStart = (forceLinearEasing = false, step) => {\n        childAnimations.forEach(animation => {\n            animation.progressStart(forceLinearEasing, step);\n        });\n        pauseAnimation();\n        shouldForceLinearEasing = forceLinearEasing;\n        if (!initialized) {\n            initializeAnimation();\n        }\n        else {\n            update(false, true, step);\n        }\n        return ani;\n    };\n    const progressStep = (step) => {\n        childAnimations.forEach(animation => {\n            animation.progressStep(step);\n        });\n        setAnimationStep(step);\n        return ani;\n    };\n    const progressEnd = (playTo, step, dur) => {\n        shouldForceLinearEasing = false;\n        childAnimations.forEach(animation => {\n            animation.progressEnd(playTo, step, dur);\n        });\n        if (dur !== undefined) {\n            forceDurationValue = dur;\n        }\n        finished = false;\n        // tslint:disable-next-line: strict-boolean-conditions\n        willComplete = true;\n        if (playTo === 0) {\n            forceDirectionValue = (getDirection() === 'reverse') ? 'normal' : 'reverse';\n            if (forceDirectionValue === 'reverse') {\n                willComplete = false;\n            }\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(1 - step);\n            }\n            else {\n                forceDelayValue = ((1 - step) * getDuration()) * -1;\n                update(false, false);\n            }\n        }\n        else if (playTo === 1) {\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(step);\n            }\n            else {\n                forceDelayValue = (step * getDuration()) * -1;\n                update(false, false);\n            }\n        }\n        if (playTo !== undefined) {\n            onFinish(() => {\n                forceDurationValue = undefined;\n                forceDirectionValue = undefined;\n                forceDelayValue = undefined;\n            }, {\n                oneTimeCallback: true\n            });\n            if (!parentAnimation) {\n                play();\n            }\n        }\n        return ani;\n    };\n    const pauseAnimation = () => {\n        if (initialized) {\n            if (supportsWebAnimations) {\n                webAnimations.forEach(animation => {\n                    animation.pause();\n                });\n            }\n            else {\n                elements.forEach(element => {\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                });\n            }\n        }\n    };\n    const pause = () => {\n        childAnimations.forEach(animation => {\n            animation.pause();\n        });\n        pauseAnimation();\n        return ani;\n    };\n    const onAnimationEndFallback = () => {\n        cssAnimationsTimerFallback = undefined;\n        animationFinish();\n    };\n    const clearCSSAnimationsTimeout = () => {\n        if (cssAnimationsTimerFallback) {\n            clearTimeout(cssAnimationsTimerFallback);\n        }\n    };\n    const playCSSAnimations = () => {\n        clearCSSAnimationsTimeout();\n        raf(() => {\n            elements.forEach(element => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-play-state', 'running');\n                }\n            });\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n        else {\n            /**\n             * This is a catchall in the event that a CSS Animation did not finish.\n             * The Web Animations API has mechanisms in place for preventing this.\n             * CSS Animations will not fire an `animationend` event\n             * for elements with `display: none`. The Web Animations API\n             * accounts for this, but using raw CSS Animations requires\n             * this workaround.\n             */\n            const animationDelay = getDelay() || 0;\n            const animationDuration = getDuration() || 0;\n            const animationIterations = getIterations() || 1;\n            // No need to set a timeout when animation has infinite iterations\n            if (isFinite(animationIterations)) {\n                cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + (animationDuration * animationIterations) + ANIMATION_END_FALLBACK_PADDING_MS);\n            }\n            animationEnd(elements[0], () => {\n                clearCSSAnimationsTimeout();\n                /**\n                 * Ensure that clean up\n                 * is always done a frame\n                 * before the onFinish handlers\n                 * are fired. Otherwise, there\n                 * may be flickering if a new\n                 * animation is started on the same\n                 * element too quickly\n                 *\n                 * TODO: Is there a cleaner way to do this?\n                 */\n                raf(() => {\n                    clearCSSAnimationPlayState();\n                    raf(animationFinish);\n                });\n            });\n        }\n    };\n    const clearCSSAnimationPlayState = () => {\n        elements.forEach(element => {\n            removeStyleProperty(element, 'animation-duration');\n            removeStyleProperty(element, 'animation-delay');\n            removeStyleProperty(element, 'animation-play-state');\n        });\n    };\n    const playWebAnimations = () => {\n        webAnimations.forEach(animation => {\n            animation.play();\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n    };\n    const resetAnimation = () => {\n        if (supportsWebAnimations) {\n            setAnimationStep(0);\n            updateWebAnimation();\n        }\n        else {\n            updateCSSAnimation();\n        }\n    };\n    const play = (opts) => {\n        return new Promise(resolve => {\n            if (opts && opts.sync) {\n                shouldForceSyncPlayback = true;\n                onFinish(() => shouldForceSyncPlayback = false, { oneTimeCallback: true });\n            }\n            if (!initialized) {\n                initializeAnimation();\n            }\n            if (finished) {\n                resetAnimation();\n                finished = false;\n            }\n            if (shouldCalculateNumAnimations) {\n                numAnimationsRunning = childAnimations.length + 1;\n                shouldCalculateNumAnimations = false;\n            }\n            onFinish(() => resolve(), { oneTimeCallback: true });\n            childAnimations.forEach(animation => {\n                animation.play();\n            });\n            if (supportsWebAnimations) {\n                playWebAnimations();\n            }\n            else {\n                playCSSAnimations();\n            }\n        });\n    };\n    const stop = () => {\n        childAnimations.forEach(animation => {\n            animation.stop();\n        });\n        if (initialized) {\n            cleanUpElements();\n            initialized = false;\n        }\n        resetFlags();\n    };\n    const from = (property, value) => {\n        const firstFrame = _keyframes[0];\n        if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n            firstFrame[property] = value;\n        }\n        else {\n            _keyframes = [\n                { offset: 0, [property]: value },\n                ..._keyframes\n            ];\n        }\n        return ani;\n    };\n    const to = (property, value) => {\n        const lastFrame = _keyframes[_keyframes.length - 1];\n        if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n            lastFrame[property] = value;\n        }\n        else {\n            _keyframes = [\n                ..._keyframes,\n                { offset: 1, [property]: value }\n            ];\n        }\n        return ani;\n    };\n    const fromTo = (property, fromValue, toValue) => {\n        return from(property, fromValue).to(property, toValue);\n    };\n    return ani = {\n        parentAnimation,\n        elements,\n        childAnimations,\n        id,\n        animationFinish,\n        from,\n        to,\n        fromTo,\n        parent,\n        play,\n        pause,\n        stop,\n        destroy,\n        keyframes,\n        addAnimation,\n        addElement,\n        update,\n        fill,\n        direction,\n        iterations,\n        duration,\n        easing,\n        delay,\n        getWebAnimations,\n        getKeyframes,\n        getFill,\n        getDirection,\n        getDelay,\n        getIterations,\n        getEasing,\n        getDuration,\n        afterAddRead,\n        afterAddWrite,\n        afterClearStyles,\n        afterStyles,\n        afterRemoveClass,\n        afterAddClass,\n        beforeAddRead,\n        beforeAddWrite,\n        beforeClearStyles,\n        beforeStyles,\n        beforeRemoveClass,\n        beforeAddClass,\n        onFinish,\n        progressStart,\n        progressStep,\n        progressEnd\n    };\n};\n\nexport { createAnimation as c };\n"]},"metadata":{},"sourceType":"module"}