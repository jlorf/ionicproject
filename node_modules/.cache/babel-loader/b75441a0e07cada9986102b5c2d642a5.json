{"ast":null,"code":"import { r as registerInstance, h, H as Host, e as getElement, d as createEvent } from './index-2cd7e630.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\nconst Tab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n\n    this.active = false;\n  }\n\n  async componentWillLoad() {\n    if (this.active) {\n      await this.setActive();\n    }\n  }\n  /** Set the active component for the tab */\n\n\n  async setActive() {\n    await this.prepareLazyLoaded();\n    this.active = true;\n  }\n\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    return Promise.resolve(undefined);\n  }\n\n  render() {\n    const {\n      tab,\n      active,\n      component\n    } = this;\n    return h(Host, {\n      role: \"tabpanel\",\n      \"aria-hidden\": !active ? 'true' : null,\n      \"aria-labelledby\": `tab-button-${tab}`,\n      class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      }\n    }, h(\"slot\", null));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"active\": [\"changeActive\"]\n    };\n  }\n\n};\nTab.style = tabCss;\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\nconst Tabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.transitioning = false;\n    /** @internal */\n\n    this.useRouter = false;\n\n    this.onTabClicked = ev => {\n      const {\n        href,\n        tab\n      } = ev.detail;\n\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n\n        if (router) {\n          router.push(href);\n        }\n      } else {\n        this.select(tab);\n      }\n    };\n\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n  }\n\n  async componentWillLoad() {\n    if (!this.useRouter) {\n      this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n    }\n\n    if (!this.useRouter) {\n      const tabs = this.tabs;\n\n      if (tabs.length > 0) {\n        await this.select(tabs[0]);\n      }\n    }\n\n    this.ionNavWillLoad.emit();\n  }\n\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n\n\n  async select(tab) {\n    const selectedTab = getTab(this.tabs, tab);\n\n    if (!this.shouldSwitch(selectedTab)) {\n      return false;\n    }\n\n    await this.setActive(selectedTab);\n    await this.notifyRouter();\n    this.tabSwitch();\n    return true;\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n\n\n  async getTab(tab) {\n    return getTab(this.tabs, tab);\n  }\n  /**\n   * Get the currently selected tab.\n   */\n\n\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n\n\n  async setRouteId(id) {\n    const selectedTab = getTab(this.tabs, id);\n\n    if (!this.shouldSwitch(selectedTab)) {\n      return {\n        changed: false,\n        element: this.selectedTab\n      };\n    }\n\n    await this.setActive(selectedTab);\n    return {\n      changed: true,\n      element: this.selectedTab,\n      markVisible: () => this.tabSwitch()\n    };\n  }\n  /** @internal */\n\n\n  async getRouteId() {\n    const tabId = this.selectedTab && this.selectedTab.tab;\n    return tabId !== undefined ? {\n      id: tabId,\n      element: this.selectedTab\n    } : undefined;\n  }\n\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({\n      tab: selectedTab.tab\n    });\n    selectedTab.active = true;\n    return Promise.resolve();\n  }\n\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n\n    if (!selectedTab) {\n      return;\n    }\n\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n\n      this.ionTabsDidChange.emit({\n        tab: selectedTab.tab\n      });\n    }\n  }\n\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n\n    return Promise.resolve(false);\n  }\n\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n\n  render() {\n    return h(Host, {\n      onIonTabButtonClick: this.onTabClicked\n    }, h(\"slot\", {\n      name: \"top\"\n    }), h(\"div\", {\n      class: \"tabs-inner\"\n    }, h(\"slot\", null)), h(\"slot\", {\n      name: \"bottom\"\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\n\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find(t => t.tab === tab) : tab;\n\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n\n  return tabEl;\n};\n\nTabs.style = tabsCss;\nexport { Tab as ion_tab, Tabs as ion_tabs };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-tab_2.entry.js"],"names":["r","registerInstance","h","H","Host","e","getElement","d","createEvent","a","attachComponent","tabCss","Tab","constructor","hostRef","loaded","active","componentWillLoad","setActive","prepareLazyLoaded","changeActive","isActive","component","delegate","el","console","error","Promise","resolve","undefined","render","tab","role","class","watchers","style","tabsCss","Tabs","transitioning","useRouter","onTabClicked","ev","href","detail","router","document","querySelector","push","select","ionNavWillLoad","ionTabsWillChange","ionTabsDidChange","closest","tabs","length","emit","componentWillRender","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","getSelected","setRouteId","id","changed","element","markVisible","getRouteId","tabId","reject","leavingTab","navChanged","Array","from","querySelectorAll","onIonTabButtonClick","name","tabEl","find","t","ion_tab","ion_tabs"],"mappings":"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","sourcesContent":["import { r as registerInstance, h, H as Host, e as getElement, d as createEvent } from './index-2cd7e630.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.loaded = false;\n        /** @internal */\n        this.active = false;\n    }\n    async componentWillLoad() {\n        if (this.active) {\n            await this.setActive();\n        }\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    changeActive(isActive) {\n        if (isActive) {\n            this.prepareLazyLoaded();\n        }\n    }\n    prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return Promise.resolve(undefined);\n    }\n    render() {\n        const { tab, active, component } = this;\n        return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n                'ion-page': component === undefined,\n                'tab-hidden': !active\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"active\": [\"changeActive\"]\n    }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.transitioning = false;\n        /** @internal */\n        this.useRouter = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n        this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const tabId = this.selectedTab && this.selectedTab.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n    const tabEl = (typeof tab === 'string')\n        ? tabs.find(t => t.tab === tab)\n        : tab;\n    if (!tabEl) {\n        console.error(`tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]},"metadata":{},"sourceType":"module"}