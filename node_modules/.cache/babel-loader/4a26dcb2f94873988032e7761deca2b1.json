{"ast":null,"code":"/**\n * Based on:\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\n * TODO: Reduce rounding error\n */\n\n/**\n * EXPERIMENTAL\n * Given a cubic-bezier curve, get the x value (time) given\n * the y value (progression).\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\n * P0: (0, 0)\n * P1: (0.32, 0.72)\n * P2: (0, 1)\n * P3: (1, 1)\n *\n * If you give a cubic bezier curve that never reaches the\n * provided progression, this function will return an empty array.\n */\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\n  return solveCubicBezier(p0[1], p1[1], p2[1], p3[1], progression).map(tValue => {\n    return solveCubicParametricEquation(p0[0], p1[0], p2[0], p3[0], tValue);\n  });\n};\n/**\n * Solve a cubic equation in one dimension (time)\n */\n\n\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\n  const partA = 3 * p1 * Math.pow(t - 1, 2);\n  const partB = -3 * p2 * t + 3 * p2 + p3 * t;\n  const partC = p0 * Math.pow(t - 1, 3);\n  return t * (partA + t * partB) - partC;\n};\n/**\n * Find the `t` value for a cubic bezier using Cardano's formula\n */\n\n\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\n  p0 -= refPoint;\n  p1 -= refPoint;\n  p2 -= refPoint;\n  p3 -= refPoint;\n  const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\n  return roots.filter(root => root >= 0 && root <= 1);\n};\n\nconst solveQuadraticEquation = (a, b, c) => {\n  const discriminant = b * b - 4 * a * c;\n\n  if (discriminant < 0) {\n    return [];\n  } else {\n    return [(-b + Math.sqrt(discriminant)) / (2 * a), (-b - Math.sqrt(discriminant)) / (2 * a)];\n  }\n};\n\nconst solveCubicEquation = (a, b, c, d) => {\n  if (a === 0) {\n    return solveQuadraticEquation(b, c, d);\n  }\n\n  b /= a;\n  c /= a;\n  d /= a;\n  const p = (3 * c - b * b) / 3;\n  const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\n\n  if (p === 0) {\n    return [Math.pow(-q, 1 / 3)];\n  } else if (q === 0) {\n    return [Math.sqrt(-p), -Math.sqrt(-p)];\n  }\n\n  const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\n\n  if (discriminant === 0) {\n    return [Math.pow(q / 2, 1 / 2) - b / 3];\n  } else if (discriminant > 0) {\n    return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow(q / 2 + Math.sqrt(discriminant), 1 / 3) - b / 3];\n  }\n\n  const r = Math.sqrt(Math.pow(-(p / 3), 3));\n  const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\n  const s = 2 * Math.pow(r, 1 / 3);\n  return [s * Math.cos(phi / 3) - b / 3, s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3, s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3];\n};\n\nexport { getTimeGivenProgression as g };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/cubic-bezier-685f606a.js"],"names":["getTimeGivenProgression","p0","p1","p2","p3","progression","solveCubicBezier","map","tValue","solveCubicParametricEquation","t","partA","Math","pow","partB","partC","refPoint","roots","solveCubicEquation","filter","root","solveQuadraticEquation","a","b","c","discriminant","sqrt","d","p","q","r","phi","acos","s","cos","PI","g"],"mappings":"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","sourcesContent":["/**\n * Based on:\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\n * TODO: Reduce rounding error\n */\n/**\n * EXPERIMENTAL\n * Given a cubic-bezier curve, get the x value (time) given\n * the y value (progression).\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\n * P0: (0, 0)\n * P1: (0.32, 0.72)\n * P2: (0, 1)\n * P3: (1, 1)\n *\n * If you give a cubic bezier curve that never reaches the\n * provided progression, this function will return an empty array.\n */\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\n    return solveCubicBezier(p0[1], p1[1], p2[1], p3[1], progression).map(tValue => {\n        return solveCubicParametricEquation(p0[0], p1[0], p2[0], p3[0], tValue);\n    });\n};\n/**\n * Solve a cubic equation in one dimension (time)\n */\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\n    const partA = (3 * p1) * Math.pow(t - 1, 2);\n    const partB = (-3 * p2 * t) + (3 * p2) + (p3 * t);\n    const partC = p0 * Math.pow(t - 1, 3);\n    return t * (partA + (t * partB)) - partC;\n};\n/**\n * Find the `t` value for a cubic bezier using Cardano's formula\n */\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\n    p0 -= refPoint;\n    p1 -= refPoint;\n    p2 -= refPoint;\n    p3 -= refPoint;\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\n    return roots.filter(root => root >= 0 && root <= 1);\n};\nconst solveQuadraticEquation = (a, b, c) => {\n    const discriminant = b * b - 4 * a * c;\n    if (discriminant < 0) {\n        return [];\n    }\n    else {\n        return [\n            (-b + Math.sqrt(discriminant)) / (2 * a),\n            (-b - Math.sqrt(discriminant)) / (2 * a)\n        ];\n    }\n};\nconst solveCubicEquation = (a, b, c, d) => {\n    if (a === 0) {\n        return solveQuadraticEquation(b, c, d);\n    }\n    b /= a;\n    c /= a;\n    d /= a;\n    const p = (3 * c - b * b) / 3;\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\n    if (p === 0) {\n        return [Math.pow(-q, 1 / 3)];\n    }\n    else if (q === 0) {\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\n    }\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\n    if (discriminant === 0) {\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\n    }\n    else if (discriminant > 0) {\n        return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow((q / 2) + Math.sqrt(discriminant), 1 / 3) - b / 3];\n    }\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\n    const s = 2 * Math.pow(r, 1 / 3);\n    return [\n        s * Math.cos(phi / 3) - b / 3,\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3\n    ];\n};\n\nexport { getTimeGivenProgression as g };\n"]},"metadata":{},"sourceType":"module"}