{"ast":null,"code":"import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-d8b49b57.js';\nimport './animation-f72ade61.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport { m as menuController } from './index-9af8638a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n\n    this.maxEdgeStart = 50;\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n  }\n\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n\n    this.animation = undefined;\n  }\n\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n\n  swipeGestureChanged() {\n    this.updateState();\n  }\n\n  async connectedCallback() {\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n\n    const el = this.el;\n    const parent = el.parentNode;\n\n    if (this.contentId === undefined) {\n      console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n    }\n\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : parent && parent.querySelector && parent.querySelector('[main]');\n\n    if (!content || !content.tagName) {\n      // requires content element\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n\n    this.contentEl = content; // add menu's content classes\n\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged(); // register this menu with the app's menu controller\n\n    menuController._register(this);\n\n    this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      canStart: ev => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev)\n    });\n    this.updateState();\n  }\n\n  async componentDidLoad() {\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n    this.updateState();\n  }\n\n  disconnectedCallback() {\n    this.blocker.destroy();\n\n    menuController._unregister(this);\n\n    if (this.animation) {\n      this.animation.destroy();\n    }\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n\n\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n\n\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n\n\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n\n\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n\n\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n\n\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n\n    this.width = width; // Destroy existing animation\n\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    } // Create new animation\n\n\n    this.animation = await menuController._createAnimation(this.type, this);\n\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n\n    this.animation.fill('both');\n  }\n\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation.direction(isReversed ? 'reverse' : 'normal').easing(isReversed ? easingReverse : easing).onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n\n    if (animated) {\n      await ani.play();\n    } else {\n      ani.play({\n        sync: true\n      });\n    }\n  }\n\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n\n    if (this._isOpen) {\n      return true; // TODO error\n    } else if (menuController._getOpenSync()) {\n      return false;\n    }\n\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    } // the cloned animation should not use an easing curve during seek\n\n\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen ? isEndSide ? shouldCompleteRight : shouldCompleteLeft : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n\n    this.lastOnEnd = detail.currentTime; // Account for rounding errors in JS\n\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * TODO: stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     * Not sure if the negative step value is an error or not\n     */\n\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation.easing('cubic-bezier(0.4, 0.0, 0.6, 1)').onFinish(() => this.afterAnimation(shouldOpen), {\n      oneTimeCallback: true\n    }).progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating'); // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n\n    this.el.classList.add(SHOW_MENU);\n\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n\n    this.blocker.block();\n    this.isAnimating = true;\n\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    } else {\n      this.ionWillClose.emit();\n    }\n  }\n\n  afterAnimation(isOpen) {\n    assert(this.isAnimating, '_before() should be called while animating'); // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n\n    if (isOpen) {\n      // add css class\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      } // emit open event\n\n\n      this.ionDidOpen.emit();\n    } else {\n      // remove css classes\n      this.el.classList.remove(SHOW_MENU);\n\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n      }\n\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n\n      if (this.animation) {\n        this.animation.stop();\n      } // emit close event\n\n\n      this.ionDidClose.emit();\n    }\n  }\n\n  updateState() {\n    const isActive = this._isActive();\n\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    } // Close menu immediately\n\n\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n\n    assert(!this.isAnimating, 'can not be animating');\n  }\n\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({\n      sync: true\n    });\n    this.afterAnimation(false);\n  }\n\n  render() {\n    const {\n      isEndSide,\n      type,\n      disabled,\n      isPaneVisible\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      role: \"navigation\",\n      class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible\n      }\n    }, h(\"div\", {\n      class: \"menu-inner\",\n      ref: el => this.menuInnerEl = el\n    }, h(\"slot\", null)), h(\"ion-backdrop\", {\n      ref: el => this.backdropEl = el,\n      class: \"menu-backdrop\",\n      tappable: false,\n      stopPropagation: false\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"type\": [\"typeChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"side\": [\"sideChanged\"],\n      \"swipeGesture\": [\"swipeGestureChanged\"]\n    };\n  }\n\n};\n\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\n\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  } else {\n    return posX <= maxEdgeStart;\n  }\n};\n\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n  /*STENCIL:MODE:ios*/\n  ios: menuIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: menuMdCss\n}; // Given a menu, return whether or not the menu toggle should be visible\n\nconst updateVisibility = async menu => {\n  const menuEl = await menuController.get(menu);\n  return !!(menuEl && (await menuEl.isActive()));\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\nconst MenuButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the user cannot interact with the menu button.\n     */\n\n    this.disabled = false;\n    /**\n     * Automatically hides the menu button when the corresponding menu is not active\n     */\n\n    this.autoHide = true;\n    /**\n     * The type of the button.\n     */\n\n    this.type = 'button';\n\n    this.onClick = async () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n\n  componentDidLoad() {\n    this.visibilityChanged();\n  }\n\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n\n  render() {\n    const {\n      color,\n      disabled\n    } = this;\n    const mode = getIonMode(this);\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n    const hidden = this.autoHide && !this.visible;\n    const attrs = {\n      type: this.type\n    };\n    return h(Host, {\n      onClick: this.onClick,\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-hidden\": hidden ? 'true' : null,\n      class: Object.assign(Object.assign({\n        [mode]: true\n      }, createColorClasses(color)), {\n        'button': true,\n        'menu-button-hidden': hidden,\n        'menu-button-disabled': disabled,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': true,\n        'ion-focusable': true\n      })\n    }, h(\"button\", Object.assign({}, attrs, {\n      disabled: disabled,\n      class: \"button-native\"\n    }), h(\"span\", {\n      class: \"button-inner\"\n    }, h(\"slot\", null, h(\"ion-icon\", {\n      icon: menuIcon,\n      mode: mode,\n      lazy: false\n    }))), mode === 'md' && h(\"ion-ripple-effect\", {\n      type: \"unbounded\"\n    })));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nMenuButton.style = {\n  /*STENCIL:MODE:ios*/\n  ios: menuButtonIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: menuButtonMdCss\n};\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nconst MenuToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n\n    this.autoHide = true;\n\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return h(Host, {\n      onClick: this.onClick,\n      \"aria-hidden\": hidden ? 'true' : null,\n      class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden\n      }\n    }, h(\"slot\", null));\n  }\n\n};\nMenuToggle.style = menuToggleCss;\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-menu_3-ios.entry.js"],"names":["r","registerInstance","d","createEvent","h","H","Host","e","getElement","c","config","b","getIonMode","i","isEndSide","assert","clamp","g","getTimeGivenProgression","GESTURE_CONTROLLER","m","menuController","createColorClasses","hostContext","menuIosCss","menuMdCss","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","Menu","constructor","hostRef","lastOnEnd","blocker","createBlocker","disableScroll","isAnimating","_isOpen","isPaneVisible","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","typeChanged","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","get","el","parent","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","error","_register","gesture","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onWillStart","onStart","onMove","onEnd","componentDidLoad","disconnectedCallback","destroy","_unregister","backdropEl","onSplitPaneChanged","detail","isPane","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","isOpen","Promise","resolve","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","isModalPresented","_getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","enable","forceClosing","_setActiveMenu","render","role","class","ref","tappable","watchers","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","menu","menuEl","menuButtonIosCss","menuButtonMdCss","MenuButton","visible","autoHide","onClick","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","icon","lazy","menuToggleCss","MenuToggle","ion_menu","ion_menu_button","ion_menu_toggle"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-d8b49b57.js';\nimport './animation-f72ade61.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport { m as menuController } from './index-9af8638a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"main-content\"></ion-menu>\n  <div id=\"main-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? easingReverse : easing)\n            .onFinish(() => {\n            if (ani.getDirection() === 'reverse') {\n                ani.direction('normal');\n            }\n        });\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.play({ sync: true });\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, isPaneVisible } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    /*STENCIL:MODE:ios*/ ios: menuIosCss,\n    /*STENCIL:MODE:md*/ md: menuMdCss\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && await menuEl.isActive());\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    /*STENCIL:MODE:ios*/ ios: menuButtonIosCss,\n    /*STENCIL:MODE:md*/ md: menuButtonMdCss\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n};\nMenuToggle.style = menuToggleCss;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n"]},"metadata":{},"sourceType":"module"}