{"ast":null,"code":"import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\nconst SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n  }\n\n  visibleChanged(visible) {\n    const detail = {\n      visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n\n  connectedCallback() {\n    this.styleChildren();\n    this.updateState();\n  }\n\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    const query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    const mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = q => {\n        this.visible = q.matches;\n      };\n\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n\n      this.rmL = () => mediaList.removeListener(callback);\n\n      this.visible = mediaList.matches;\n    }\n  }\n\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n\n  styleChildren() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      }\n    }, h(\"slot\", null));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"visible\": [\"visibleChanged\"],\n      \"disabled\": [\"updateState\"],\n      \"when\": [\"updateState\"]\n    };\n  }\n\n};\n\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nSplitPane.style = {\n  /*STENCIL:MODE:ios*/\n  ios: splitPaneIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: splitPaneMdCss\n};\nexport { SplitPane as ion_split_pane };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-split-pane-ios.entry.js"],"names":["r","registerInstance","d","createEvent","h","H","Host","e","getElement","b","getIonMode","splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","constructor","hostRef","visible","disabled","when","ionSplitPaneVisible","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","render","mode","class","watchers","toAdd","toRemove","add","remove","style","ios","md","ion_split_pane"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined && child.id === contentId;\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nSplitPane.style = {\n    /*STENCIL:MODE:ios*/ ios: splitPaneIosCss,\n    /*STENCIL:MODE:md*/ md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"]},"metadata":{},"sourceType":"module"}