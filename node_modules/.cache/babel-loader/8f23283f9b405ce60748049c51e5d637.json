{"ast":null,"code":"import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { p as pointerCoord } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n\n    this.scrollable = false;\n\n    this.onClick = ev => {\n      const current = ev.target;\n      const previous = this.checked;\n      this.value = current.value;\n\n      if (previous && this.scrollable) {\n        this.checkButton(previous, current);\n      }\n\n      this.checked = current;\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({\n      value\n    });\n\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({\n          value\n        });\n      } else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n\n  gestureChanged() {\n    if (this.gesture && !this.scrollable) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  connectedCallback() {\n    this.emitStyle();\n  }\n\n  componentWillLoad() {\n    this.emitStyle();\n  }\n\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev)\n    });\n    this.gesture.enable(!this.scrollable);\n    this.gestureChanged();\n\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n\n    this.didInit = true;\n  }\n\n  onStart(detail) {\n    this.activate(detail);\n  }\n\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n\n    const value = this.valueAfterGesture;\n\n    if (value !== undefined) {\n      this.ionChange.emit({\n        value\n      });\n      this.valueAfterGesture = undefined;\n    }\n  }\n\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n\n\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n\n    if (!useRippleEffect) {\n      return;\n    }\n\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n\n    if (!ripple) {\n      return;\n    }\n\n    const {\n      x,\n      y\n    } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then(remove => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n\n\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach(button => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      } else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value); // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    } // If there are no checked buttons, set the current button to checked\n\n\n    if (!checked) {\n      this.value = clicked.value;\n    } // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n\n\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left; // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform); // Force a repaint to ensure the transform happens\n\n      currentIndicator.getBoundingClientRect(); // Add the transition to move the indicator into place\n\n      currentIndicator.classList.add('segment-button-indicator-animated'); // Remove the transform to slide the indicator back to the button clicked\n\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const next = index + 1; // Keep track of the currently checked button\n\n    this.checked = buttons.find(button => button.value === this.value);\n\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n\n  setNextIndex(detail, isEnd = false) {\n    const isRTL = document.dir === 'rtl';\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n\n    if (index === -1) {\n      return;\n    } // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n\n\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width; // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n\n    const currentX = detail.currentX;\n    const previousY = rect.top + rect.height / 2;\n    const nextEl = document.elementFromPoint(currentX, previousY);\n    const decreaseIndex = isRTL ? currentX > left + width : currentX < left;\n    const increaseIndex = isRTL ? currentX < left : currentX > left + width; // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        } // Increase index, moves right in LTR & left in RTL\n\n      } else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    } // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n\n\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    /* tslint:disable-next-line */\n\n\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n\n    return true;\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'segment': true\n    });\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      onClick: this.onClick,\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable\n      })\n    }, h(\"slot\", null));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"],\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n};\nSegment.style = {\n  /*STENCIL:MODE:ios*/\n  ios: segmentIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: segmentMdCss\n};\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\nlet ids = 0;\nconst SegmentButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n\n    this.value = 'ion-sb-' + ids++;\n\n    this.updateState = () => {\n      if (this.segmentEl) {\n        this.checked = this.segmentEl.value === this.value;\n      }\n    };\n  }\n\n  connectedCallback() {\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n\n    if (segmentEl) {\n      this.updateState();\n      segmentEl.addEventListener('ionSelect', this.updateState);\n    }\n  }\n\n  disconnectedCallback() {\n    const segmentEl = this.segmentEl;\n\n    if (segmentEl) {\n      segmentEl.removeEventListener('ionSelect', this.updateState);\n      this.segmentEl = null;\n    }\n  }\n\n  get hasLabel() {\n    return !!this.el.querySelector('ion-label');\n  }\n\n  get hasIcon() {\n    return !!this.el.querySelector('ion-icon');\n  }\n\n  render() {\n    const {\n      checked,\n      type,\n      disabled,\n      hasIcon,\n      hasLabel,\n      layout\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      \"aria-disabled\": disabled ? 'true' : null,\n      class: {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-segment': hostContext('ion-segment', this.el),\n        'in-segment-color': hostContext('ion-segment[color]', this.el),\n        'segment-button-has-label': hasLabel,\n        'segment-button-has-icon': hasIcon,\n        'segment-button-has-label-only': hasLabel && !hasIcon,\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\n        'segment-button-disabled': disabled,\n        'segment-button-checked': checked,\n        [`segment-button-layout-${layout}`]: true,\n        'ion-activatable': true,\n        'ion-activatable-instant': true,\n        'ion-focusable': true\n      }\n    }, h(\"button\", {\n      type: type,\n      \"aria-pressed\": checked ? 'true' : null,\n      class: \"button-native\",\n      disabled: disabled\n    }, h(\"span\", {\n      class: \"button-inner\"\n    }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", {\n      part: \"indicator\",\n      class: {\n        'segment-button-indicator': true,\n        'segment-button-indicator-animated': true\n      }\n    }, h(\"div\", {\n      part: \"indicator-background\",\n      class: \"segment-button-indicator-background\"\n    })));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nSegmentButton.style = {\n  /*STENCIL:MODE:ios*/\n  ios: segmentButtonIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: segmentButtonMdCss\n};\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-segment_2-ios.entry.js"],"names":["r","registerInstance","d","createEvent","w","writeTask","h","H","Host","e","getElement","c","config","b","getIonMode","p","pointerCoord","createColorClasses","hostContext","segmentIosCss","segmentMdCss","Segment","constructor","hostRef","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","ionChange","ionSelect","ionStyle","valueChanged","oldValue","emit","valueAfterGesture","disabledChanged","gestureChanged","buttons","getButtons","button","gesture","enable","connectedCallback","emitStyle","componentWillLoad","componentDidLoad","setCheckedClasses","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","undefined","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","tagName","getIndicator","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","render","mode","class","Object","assign","color","watchers","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateState","closest","addEventListener","disconnectedCallback","removeEventListener","hasLabel","hasIcon","part","ion_segment","ion_segment_button"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { p as pointerCoord } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            this.value = current.value;\n            if (previous && this.scrollable) {\n                this.checkButton(previous, current);\n            }\n            this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    valueChanged(value, oldValue) {\n        this.ionSelect.emit({ value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        const buttons = this.getButtons();\n        for (const button of buttons) {\n            button.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.setCheckedClasses();\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.scrollable);\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        this.didInit = true;\n    }\n    onStart(detail) {\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        const checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        const value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value });\n            this.valueAfterGesture = undefined;\n        }\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    addRipple(detail) {\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        const root = checked.shadowRoot || checked;\n        const ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        const { x, y } = pointerCoord(detail.event);\n        ripple.addRipple(x, y).then(remove => remove());\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach(button => {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(button => button.value === this.value);\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const isRTL = document.dir === 'rtl';\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + (rect.height / 2);\n        const nextEl = document.elementFromPoint(currentX, previousY);\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'segment-activated': this.activated, 'segment-disabled': this.disabled, 'segment-scrollable': this.scrollable }) }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentIosCss,\n    /*STENCIL:MODE:md*/ md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = () => {\n            if (this.segmentEl) {\n                this.checked = this.segmentEl.value === this.value;\n            }\n        };\n    }\n    connectedCallback() {\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n};\nSegmentButton.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentButtonIosCss,\n    /*STENCIL:MODE:md*/ md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"]},"metadata":{},"sourceType":"module"}