{"ast":null,"code":"import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { f as findItemLabel } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n\n    this.checked = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n\n    this.disabled = false;\n\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n  }\n\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n\n    if (radioGroup) {\n      this.updateState();\n      radioGroup.addEventListener('ionChange', this.updateState);\n    }\n  }\n\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n\n    if (radioGroup) {\n      radioGroup.removeEventListener('ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n\n  componentWillLoad() {\n    this.emitStyle();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  render() {\n    const {\n      inputId,\n      disabled,\n      checked,\n      color,\n      el\n    } = this;\n    const mode = getIonMode(this);\n    const labelId = inputId + '-lbl';\n    const label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      role: \"radio\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": `${checked}`,\n      \"aria-labelledby\": labelId,\n      class: Object.assign(Object.assign({}, createColorClasses(color)), {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled\n      })\n    }, h(\"div\", {\n      class: \"radio-icon\"\n    }, h(\"div\", {\n      class: \"radio-inner\"\n    })), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: disabled\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"color\": [\"emitStyle\"],\n      \"checked\": [\"emitStyle\"],\n      \"disabled\": [\"emitStyle\"]\n    };\n  }\n\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  /*STENCIL:MODE:ios*/\n  ios: radioIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: radioMdCss\n};\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n\n    this.onClick = ev => {\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        } else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n  }\n\n  valueChanged(value) {\n    this.ionChange.emit({\n      value\n    });\n  }\n\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const el = this.el;\n    const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n\n    if (header) {\n      const label = header.querySelector('ion-label');\n\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n\n  render() {\n    return h(Host, {\n      role: \"radiogroup\",\n      \"aria-labelledby\": this.labelId,\n      onClick: this.onClick,\n      class: getIonMode(this)\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n};\nlet radioGroupIds = 0;\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-radio_2-ios.entry.js"],"names":["r","registerInstance","d","createEvent","h","H","Host","e","getElement","b","getIonMode","f","findItemLabel","c","createColorClasses","hostContext","radioIosCss","radioMdCss","Radio","constructor","hostRef","inputId","radioButtonIds","radioGroup","checked","name","disabled","updateState","value","onFocus","ionFocus","emit","onBlur","ionBlur","ionStyle","connectedCallback","undefined","el","closest","addEventListener","disconnectedCallback","removeEventListener","componentWillLoad","emitStyle","render","color","mode","labelId","label","id","role","class","Object","assign","type","watchers","style","ios","md","RadioGroup","radioGroupIds","allowEmptySelection","onClick","ev","selectedRadio","target","currentValue","newValue","ionChange","valueChanged","header","querySelector","ion_radio","ion_radio_group"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { f as findItemLabel } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                this.checked = this.radioGroup.value === this.value;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n        if (radioGroup) {\n            this.updateState();\n            radioGroup.addEventListener('ionChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            radioGroup.removeEventListener('ionChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\" }, h(\"div\", { class: \"radio-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"emitStyle\"],\n        \"checked\": [\"emitStyle\"],\n        \"disabled\": [\"emitStyle\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    /*STENCIL:MODE:ios*/ ios: radioIosCss,\n    /*STENCIL:MODE:md*/ md: radioMdCss\n};\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.onClick = (ev) => {\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            if (selectedRadio) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                }\n            }\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    valueChanged(value) {\n        this.ionChange.emit({ value });\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const el = this.el;\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"]},"metadata":{},"sourceType":"module"}