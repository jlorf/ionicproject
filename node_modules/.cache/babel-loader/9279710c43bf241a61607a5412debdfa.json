{"ast":null,"code":"import { r as registerInstance, h, H as Host } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\nconst Spinner = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the spinner's animation will be paused.\n     */\n\n    this.paused = false;\n  }\n\n  getName() {\n    const spinnerName = this.name || config.get('spinner');\n    const mode = getIonMode(this);\n\n    if (spinnerName) {\n      return spinnerName;\n    }\n\n    return mode === 'ios' ? 'lines' : 'circular';\n  }\n\n  render() {\n    const self = this;\n    const mode = getIonMode(self);\n    const spinnerName = self.getName();\n    const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n    const duration = typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur;\n    const svgs = [];\n\n    if (spinner.circles !== undefined) {\n      for (let i = 0; i < spinner.circles; i++) {\n        svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n      }\n    } else if (spinner.lines !== undefined) {\n      for (let i = 0; i < spinner.lines; i++) {\n        svgs.push(buildLine(spinner, duration, i, spinner.lines));\n      }\n    }\n\n    return h(Host, {\n      class: Object.assign(Object.assign({}, createColorClasses(self.color)), {\n        [mode]: true,\n        [`spinner-${spinnerName}`]: true,\n        'spinner-paused': !!self.paused || config.getBoolean('_testing')\n      }),\n      role: \"progressbar\",\n      style: spinner.elmDuration ? {\n        animationDuration: duration + 'ms'\n      } : {}\n    }, svgs);\n  }\n\n};\n\nconst buildCircle = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return h(\"svg\", {\n    viewBox: data.viewBox || '0 0 64 64',\n    style: data.style\n  }, h(\"circle\", {\n    transform: data.transform || 'translate(32,32)',\n    cx: data.cx,\n    cy: data.cy,\n    r: data.r,\n    style: spinner.elmDuration ? {\n      animationDuration: duration + 'ms'\n    } : {}\n  }));\n};\n\nconst buildLine = (spinner, duration, index, total) => {\n  const data = spinner.fn(duration, index, total);\n  data.style['animation-duration'] = duration + 'ms';\n  return h(\"svg\", {\n    viewBox: data.viewBox || '0 0 64 64',\n    style: data.style\n  }, h(\"line\", {\n    transform: \"translate(32,32)\",\n    y1: data.y1,\n    y2: data.y2\n  }));\n};\n\nSpinner.style = spinnerCss;\nexport { Spinner as ion_spinner };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-spinner.entry.js"],"names":["r","registerInstance","h","H","Host","c","config","b","getIonMode","createColorClasses","S","SPINNERS","spinnerCss","Spinner","constructor","hostRef","paused","getName","spinnerName","name","get","mode","render","self","spinner","duration","dur","svgs","circles","undefined","i","push","buildCircle","lines","buildLine","class","Object","assign","color","getBoolean","role","style","elmDuration","animationDuration","index","total","data","fn","viewBox","transform","cx","cy","y1","y2","ion_spinner"],"mappings":"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","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst spinnerCss = \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}[dir=rtl] svg,:host-context([dir=rtl]) svg{left:unset;right:unset;right:0}[dir=rtl] svg,:host-context([dir=rtl]) svg{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px, 200px;stroke-dashoffset:0px;stroke-width:5.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) svg,:host(.spinner-paused) circle{-webkit-animation-play-state:paused;animation-play-state:paused}@-webkit-keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@keyframes spinner-fade-out{0%{opacity:1}100%{opacity:0}}@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@keyframes spinner-scale-out{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1)}100%{-webkit-transform:scale(0, 0);transform:scale(0, 0)}}@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@keyframes spinner-dots{0%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}50%{-webkit-transform:scale(0.4, 0.4);transform:scale(0.4, 0.4);opacity:0.3}100%{-webkit-transform:scale(1, 1);transform:scale(1, 1);opacity:0.9}}@-webkit-keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-circular{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes spinner-circular-inner{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}\";\n\nconst Spinner = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the spinner's animation will be paused.\n         */\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return (mode === 'ios') ? 'lines' : 'circular';\n    }\n    render() {\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n        const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(self.color)), { [mode]: true, [`spinner-${spinnerName}`]: true, 'spinner-paused': !!self.paused || config.getBoolean('_testing') }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\nSpinner.style = spinnerCss;\n\nexport { Spinner as ion_spinner };\n"]},"metadata":{},"sourceType":"module"}