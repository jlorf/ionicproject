{"ast":null,"code":"var _jsxFileName = \"/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem } from '@ionic/react';\nimport Context from '../../data/context';\n\nconst Moduls = () => {\n  _s();\n\n  var _context$moduls$lengt, _context$moduls;\n\n  const [activityToComplete, setActivityToComplete] = useState();\n  const context = useContext(Context);\n\n  const openCompleteModal = persona => {\n    setActivityToComplete(persona);\n  };\n\n  const closeModal = () => {\n    setActivityToComplete(undefined);\n  };\n\n  var btnClick = modul => {\n    context.presentAlert(\"Prova\", modul.Nom, \"Prova\", [\"OK\"]);\n  };\n\n  if (((_context$moduls$lengt = (_context$moduls = context.moduls) === null || _context$moduls === void 0 ? void 0 : _context$moduls.length) !== null && _context$moduls$lengt !== void 0 ? _context$moduls$lengt : 0) == 0) context.ObtenirModuls(context);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonMenuButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Moduls\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    key: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, \"Afegir modul\"), /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, \"afegir mosul\")), /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }))))), context.moduls.map(modul => /*#__PURE__*/React.createElement(IonRow, {\n    key: modul.codi.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCard, {\n    onClick: () => btnClick(modul),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IonCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, modul.Nom), /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, modul.Abrev)), /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }))))))))));\n};\n\n_s(Moduls, \"0zG1AS9Cy+C0mmQf2/a28u3WGJo=\");\n\n_c = Moduls;\nexport default Moduls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Moduls\");","map":{"version":3,"sources":["/home/joel/projecteionic/src/pages/Moduls/Moduls.tsx"],"names":["React","useContext","useState","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonGrid","IonButtons","IonMenuButton","IonRow","IonCol","IonCard","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCardContent","IonItem","Context","Moduls","activityToComplete","setActivityToComplete","context","openCompleteModal","persona","closeModal","undefined","btnClick","modul","presentAlert","Nom","moduls","length","ObtenirModuls","map","codi","toString","Abrev"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context, { Persona, Modul } from '../../data/context';\n\nconst Moduls: React.FC = () => {\n\n    const [activityToComplete, setActivityToComplete] = useState<Persona>();\n\n    const context = useContext(Context);\n\n    const openCompleteModal = (persona: Persona) => {\n        setActivityToComplete(persona);\n    };\n\n    const closeModal = () => {\n        setActivityToComplete(undefined);\n    };\n\n    var btnClick = (modul: Modul) => {\n        context.presentAlert(\"Prova\", modul.Nom,\"Prova\", [\"OK\"]);\n      };\n\n    if((context.moduls?.length ?? 0) == 0) context.ObtenirModuls(context);\n    return (\n        <React.Fragment>\n            {/* <IonModal isOpen={!!activityToComplete}>\n                <CompleteModalActivity persona={activityToComplete as Persona} dismissModal={closeModal}/>\n            </IonModal> */}\n\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonButtons slot=\"start\">\n                            <IonMenuButton />\n                        </IonButtons>\n                        <IonTitle>Moduls</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonGrid>\n                    <IonRow key=\"-1\">\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard>\n                                    {/* <img src={modul.imageUrl} alt=\"modul\"/> */}\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>Afegir modul</IonCardSubtitle>\n                                        <IonCardTitle>afegir mosul</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <IonItem lines=\"none\">\n                                            {/* { !modul.professor ?\n                                            <IonButton\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(persona)}>\n                                                Complete modul\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" icon={checkmarkOutline} />\n                                            } */}\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        { context.moduls.map(modul => (\n                        <IonRow key={modul.codi.toString()}>\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard onClick={() => btnClick(modul) }>\n                                    {/* <img src={modul.imageUrl} alt=\"modul\"/> */}\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>{modul.Nom}</IonCardSubtitle>\n                                        <IonCardTitle>{modul.Abrev}</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <IonItem lines=\"none\">\n                                            {/* { !modul.professor ?\n                                            <IonButton\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(persona)}>\n                                                Complete modul\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" icon={checkmarkOutline} />\n                                            } */}\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        ))\n                        }\n                    </IonGrid>\n                </IonContent>\n            </IonPage>\n        </React.Fragment>\n    );\n};\n\nexport default Moduls;"]},"metadata":{},"sourceType":"module"}