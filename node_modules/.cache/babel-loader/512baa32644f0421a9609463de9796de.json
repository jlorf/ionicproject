{"ast":null,"code":"import { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport { MENU_BACK_BUTTON_PRIORITY } from './hardware-back-button-784b7e3c.js';\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\n\nconst baseAnimation = isIos => {\n  // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n  // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n\n  /**\n   * \"Apply the sharp curve to items temporarily leaving the screen that may return\n   * from the same exit point. When they return, use the deceleration curve. On mobile,\n   * this transition typically occurs over 300ms\" -- MD Motion Guide\n   */\n  return createAnimation().duration(isIos ? 400 : 300);\n};\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\n\n\nconst menuOverlayAnimation = menu => {\n  let closedX;\n  let openedX;\n  const width = menu.width + 8;\n  const menuAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n\n  if (menu.isEndSide) {\n    // right side\n    closedX = width + 'px';\n    openedX = '0px';\n  } else {\n    // left side\n    closedX = -width + 'px';\n    openedX = '0px';\n  }\n\n  menuAnimation.addElement(menu.menuInnerEl).fromTo('transform', `translateX(${closedX})`, `translateX(${openedX})`);\n  const mode = getIonMode(menu);\n  const isIos = mode === 'ios';\n  const opacity = isIos ? 0.2 : 0.25;\n  backdropAnimation.addElement(menu.backdropEl).fromTo('opacity', 0.01, opacity);\n  return baseAnimation(isIos).addAnimation([menuAnimation, backdropAnimation]);\n};\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\n\n\nconst menuPushAnimation = menu => {\n  let contentOpenedX;\n  let menuClosedX;\n  const mode = getIonMode(menu);\n  const width = menu.width;\n\n  if (menu.isEndSide) {\n    contentOpenedX = -width + 'px';\n    menuClosedX = width + 'px';\n  } else {\n    contentOpenedX = width + 'px';\n    menuClosedX = -width + 'px';\n  }\n\n  const menuAnimation = createAnimation().addElement(menu.menuInnerEl).fromTo('transform', `translateX(${menuClosedX})`, 'translateX(0px)');\n  const contentAnimation = createAnimation().addElement(menu.contentEl).fromTo('transform', 'translateX(0px)', `translateX(${contentOpenedX})`);\n  const backdropAnimation = createAnimation().addElement(menu.backdropEl).fromTo('opacity', 0.01, 0.32);\n  return baseAnimation(mode === 'ios').addAnimation([menuAnimation, contentAnimation, backdropAnimation]);\n};\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\n\n\nconst menuRevealAnimation = menu => {\n  const mode = getIonMode(menu);\n  const openedX = menu.width * (menu.isEndSide ? -1 : 1) + 'px';\n  const contentOpen = createAnimation().addElement(menu.contentEl) // REVIEW\n  .fromTo('transform', 'translateX(0px)', `translateX(${openedX})`);\n  return baseAnimation(mode === 'ios').addAnimation(contentOpen);\n};\n\nconst createMenuController = () => {\n  const menuAnimations = new Map();\n  const menus = [];\n\n  const open = async menu => {\n    const menuEl = await get(menu);\n\n    if (menuEl) {\n      return menuEl.open();\n    }\n\n    return false;\n  };\n\n  const close = async menu => {\n    const menuEl = await (menu !== undefined ? get(menu) : getOpen());\n\n    if (menuEl !== undefined) {\n      return menuEl.close();\n    }\n\n    return false;\n  };\n\n  const toggle = async menu => {\n    const menuEl = await get(menu);\n\n    if (menuEl) {\n      return menuEl.toggle();\n    }\n\n    return false;\n  };\n\n  const enable = async (shouldEnable, menu) => {\n    const menuEl = await get(menu);\n\n    if (menuEl) {\n      menuEl.disabled = !shouldEnable;\n    }\n\n    return menuEl;\n  };\n\n  const swipeGesture = async (shouldEnable, menu) => {\n    const menuEl = await get(menu);\n\n    if (menuEl) {\n      menuEl.swipeGesture = shouldEnable;\n    }\n\n    return menuEl;\n  };\n\n  const isOpen = async menu => {\n    if (menu != null) {\n      const menuEl = await get(menu);\n      return menuEl !== undefined && menuEl.isOpen();\n    } else {\n      const menuEl = await getOpen();\n      return menuEl !== undefined;\n    }\n  };\n\n  const isEnabled = async menu => {\n    const menuEl = await get(menu);\n\n    if (menuEl) {\n      return !menuEl.disabled;\n    }\n\n    return false;\n  };\n\n  const get = async menu => {\n    await waitUntilReady();\n\n    if (menu === 'start' || menu === 'end') {\n      // there could be more than one menu on the same side\n      // so first try to get the enabled one\n      const menuRef = find(m => m.side === menu && !m.disabled);\n\n      if (menuRef) {\n        return menuRef;\n      } // didn't find a menu side that is enabled\n      // so try to get the first menu side found\n\n\n      return find(m => m.side === menu);\n    } else if (menu != null) {\n      // the menuId was not left or right\n      // so try to get the menu by its \"id\"\n      return find(m => m.menuId === menu);\n    } // return the first enabled menu\n\n\n    const menuEl = find(m => !m.disabled);\n\n    if (menuEl) {\n      return menuEl;\n    } // get the first menu in the array, if one exists\n\n\n    return menus.length > 0 ? menus[0].el : undefined;\n  };\n  /**\n   * Get the instance of the opened menu. Returns `null` if a menu is not found.\n   */\n\n\n  const getOpen = async () => {\n    await waitUntilReady();\n    return _getOpenSync();\n  };\n  /**\n   * Get all menu instances.\n   */\n\n\n  const getMenus = async () => {\n    await waitUntilReady();\n    return getMenusSync();\n  };\n  /**\n   * Get whether or not a menu is animating. Returns `true` if any\n   * menu is currently animating.\n   */\n\n\n  const isAnimating = async () => {\n    await waitUntilReady();\n    return isAnimatingSync();\n  };\n\n  const registerAnimation = (name, animation) => {\n    menuAnimations.set(name, animation);\n  };\n\n  const _register = menu => {\n    if (menus.indexOf(menu) < 0) {\n      if (!menu.disabled) {\n        _setActiveMenu(menu);\n      }\n\n      menus.push(menu);\n    }\n  };\n\n  const _unregister = menu => {\n    const index = menus.indexOf(menu);\n\n    if (index > -1) {\n      menus.splice(index, 1);\n    }\n  };\n\n  const _setActiveMenu = menu => {\n    // if this menu should be enabled\n    // then find all the other menus on this same side\n    // and automatically disable other same side menus\n    const side = menu.side;\n    menus.filter(m => m.side === side && m !== menu).forEach(m => m.disabled = true);\n  };\n\n  const _setOpen = async (menu, shouldOpen, animated) => {\n    if (isAnimatingSync()) {\n      return false;\n    }\n\n    if (shouldOpen) {\n      const openedMenu = await getOpen();\n\n      if (openedMenu && menu.el !== openedMenu) {\n        await openedMenu.setOpen(false, false);\n      }\n    }\n\n    return menu._setOpen(shouldOpen, animated);\n  };\n\n  const _createAnimation = (type, menuCmp) => {\n    const animationBuilder = menuAnimations.get(type);\n\n    if (!animationBuilder) {\n      throw new Error('animation not registered');\n    }\n\n    const animation = animationBuilder(menuCmp);\n    return animation;\n  };\n\n  const _getOpenSync = () => {\n    return find(m => m._isOpen);\n  };\n\n  const getMenusSync = () => {\n    return menus.map(menu => menu.el);\n  };\n\n  const isAnimatingSync = () => {\n    return menus.some(menu => menu.isAnimating);\n  };\n\n  const find = predicate => {\n    const instance = menus.find(predicate);\n\n    if (instance !== undefined) {\n      return instance.el;\n    }\n\n    return undefined;\n  };\n\n  const waitUntilReady = () => {\n    return Promise.all(Array.from(document.querySelectorAll('ion-menu')).map(menu => menu.componentOnReady()));\n  };\n\n  registerAnimation('reveal', menuRevealAnimation);\n  registerAnimation('push', menuPushAnimation);\n  registerAnimation('overlay', menuOverlayAnimation);\n  /* tslint:disable-next-line */\n\n  if (typeof document !== 'undefined') {\n    document.addEventListener('ionBackButton', ev => {\n      const openMenu = _getOpenSync();\n\n      if (openMenu) {\n        ev.detail.register(MENU_BACK_BUTTON_PRIORITY, () => {\n          return openMenu.close();\n        });\n      }\n    });\n  }\n\n  return {\n    registerAnimation,\n    get,\n    getMenus,\n    getOpen,\n    isEnabled,\n    swipeGesture,\n    isAnimating,\n    isOpen,\n    enable,\n    toggle,\n    close,\n    open,\n    _getOpenSync,\n    _createAnimation,\n    _register,\n    _unregister,\n    _setOpen,\n    _setActiveMenu\n  };\n};\n\nconst menuController = /*@__PURE__*/createMenuController();\nexport { menuController as m };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/index-9af8638a.js"],"names":["b","getIonMode","c","createAnimation","MENU_BACK_BUTTON_PRIORITY","baseAnimation","isIos","duration","menuOverlayAnimation","menu","closedX","openedX","width","menuAnimation","backdropAnimation","isEndSide","addElement","menuInnerEl","fromTo","mode","opacity","backdropEl","addAnimation","menuPushAnimation","contentOpenedX","menuClosedX","contentAnimation","contentEl","menuRevealAnimation","contentOpen","createMenuController","menuAnimations","Map","menus","open","menuEl","get","close","undefined","getOpen","toggle","enable","shouldEnable","disabled","swipeGesture","isOpen","isEnabled","waitUntilReady","menuRef","find","m","side","menuId","length","el","_getOpenSync","getMenus","getMenusSync","isAnimating","isAnimatingSync","registerAnimation","name","animation","set","_register","indexOf","_setActiveMenu","push","_unregister","index","splice","filter","forEach","_setOpen","shouldOpen","animated","openedMenu","setOpen","_createAnimation","type","menuCmp","animationBuilder","Error","_isOpen","map","some","predicate","instance","Promise","all","Array","from","document","querySelectorAll","componentOnReady","addEventListener","ev","openMenu","detail","register","menuController"],"mappings":"AAAA,SAASA,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AACA,SAASC,CAAC,IAAIC,eAAd,QAAqC,yBAArC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AAEA;;;;;;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B;AACA;;AACA;;;;;AAKA,SAAOH,eAAe,GAAGI,QAAlB,CAA2BD,KAAK,GAAG,GAAH,GAAS,GAAzC,CAAP;AACH,CATD;AAWA;;;;;;;AAKA,MAAME,oBAAoB,GAAIC,IAAD,IAAU;AACnC,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACG,KAAL,GAAa,CAA3B;AACA,QAAMC,aAAa,GAAGV,eAAe,EAArC;AACA,QAAMW,iBAAiB,GAAGX,eAAe,EAAzC;;AACA,MAAIM,IAAI,CAACM,SAAT,EAAoB;AAChB;AACAL,IAAAA,OAAO,GAAGE,KAAK,GAAG,IAAlB;AACAD,IAAAA,OAAO,GAAG,KAAV;AACH,GAJD,MAKK;AACD;AACAD,IAAAA,OAAO,GAAG,CAACE,KAAD,GAAS,IAAnB;AACAD,IAAAA,OAAO,GAAG,KAAV;AACH;;AACDE,EAAAA,aAAa,CACRG,UADL,CACgBP,IAAI,CAACQ,WADrB,EAEKC,MAFL,CAEY,WAFZ,EAE0B,cAAaR,OAAQ,GAF/C,EAEoD,cAAaC,OAAQ,GAFzE;AAGA,QAAMQ,IAAI,GAAGlB,UAAU,CAACQ,IAAD,CAAvB;AACA,QAAMH,KAAK,GAAGa,IAAI,KAAK,KAAvB;AACA,QAAMC,OAAO,GAAGd,KAAK,GAAG,GAAH,GAAS,IAA9B;AACAQ,EAAAA,iBAAiB,CACZE,UADL,CACgBP,IAAI,CAACY,UADrB,EAEKH,MAFL,CAEY,SAFZ,EAEuB,IAFvB,EAE6BE,OAF7B;AAGA,SAAOf,aAAa,CAACC,KAAD,CAAb,CAAqBgB,YAArB,CAAkC,CAACT,aAAD,EAAgBC,iBAAhB,CAAlC,CAAP;AACH,CA1BD;AA4BA;;;;;;;AAKA,MAAMS,iBAAiB,GAAId,IAAD,IAAU;AAChC,MAAIe,cAAJ;AACA,MAAIC,WAAJ;AACA,QAAMN,IAAI,GAAGlB,UAAU,CAACQ,IAAD,CAAvB;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACG,KAAnB;;AACA,MAAIH,IAAI,CAACM,SAAT,EAAoB;AAChBS,IAAAA,cAAc,GAAG,CAACZ,KAAD,GAAS,IAA1B;AACAa,IAAAA,WAAW,GAAGb,KAAK,GAAG,IAAtB;AACH,GAHD,MAIK;AACDY,IAAAA,cAAc,GAAGZ,KAAK,GAAG,IAAzB;AACAa,IAAAA,WAAW,GAAG,CAACb,KAAD,GAAS,IAAvB;AACH;;AACD,QAAMC,aAAa,GAAGV,eAAe,GAChCa,UADiB,CACNP,IAAI,CAACQ,WADC,EAEjBC,MAFiB,CAEV,WAFU,EAEI,cAAaO,WAAY,GAF7B,EAEiC,iBAFjC,CAAtB;AAGA,QAAMC,gBAAgB,GAAGvB,eAAe,GACnCa,UADoB,CACTP,IAAI,CAACkB,SADI,EAEpBT,MAFoB,CAEb,WAFa,EAEA,iBAFA,EAEoB,cAAaM,cAAe,GAFhD,CAAzB;AAGA,QAAMV,iBAAiB,GAAGX,eAAe,GACpCa,UADqB,CACVP,IAAI,CAACY,UADK,EAErBH,MAFqB,CAEd,SAFc,EAEH,IAFG,EAEG,IAFH,CAA1B;AAGA,SAAOb,aAAa,CAACc,IAAI,KAAK,KAAV,CAAb,CAA8BG,YAA9B,CAA2C,CAACT,aAAD,EAAgBa,gBAAhB,EAAkCZ,iBAAlC,CAA3C,CAAP;AACH,CAvBD;AAyBA;;;;;;;AAKA,MAAMc,mBAAmB,GAAInB,IAAD,IAAU;AAClC,QAAMU,IAAI,GAAGlB,UAAU,CAACQ,IAAD,CAAvB;AACA,QAAME,OAAO,GAAIF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACM,SAAL,GAAiB,CAAC,CAAlB,GAAsB,CAApC,CAAD,GAA2C,IAA3D;AACA,QAAMc,WAAW,GAAG1B,eAAe,GAC9Ba,UADe,CACJP,IAAI,CAACkB,SADD,EACY;AADZ,GAEfT,MAFe,CAER,WAFQ,EAEK,iBAFL,EAEyB,cAAaP,OAAQ,GAF9C,CAApB;AAGA,SAAON,aAAa,CAACc,IAAI,KAAK,KAAV,CAAb,CAA8BG,YAA9B,CAA2CO,WAA3C,CAAP;AACH,CAPD;;AASA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAMC,cAAc,GAAG,IAAIC,GAAJ,EAAvB;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,QAAMC,IAAI,GAAG,MAAOzB,IAAP,IAAgB;AACzB,UAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;;AACA,QAAI0B,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACD,IAAP,EAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOA,QAAMG,KAAK,GAAG,MAAO5B,IAAP,IAAgB;AAC1B,UAAM0B,MAAM,GAAG,OAAO1B,IAAI,KAAK6B,SAAT,GAAqBF,GAAG,CAAC3B,IAAD,CAAxB,GAAiC8B,OAAO,EAA/C,CAAf;;AACA,QAAIJ,MAAM,KAAKG,SAAf,EAA0B;AACtB,aAAOH,MAAM,CAACE,KAAP,EAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOA,QAAMG,MAAM,GAAG,MAAO/B,IAAP,IAAgB;AAC3B,UAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;;AACA,QAAI0B,MAAJ,EAAY;AACR,aAAOA,MAAM,CAACK,MAAP,EAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOA,QAAMC,MAAM,GAAG,OAAOC,YAAP,EAAqBjC,IAArB,KAA8B;AACzC,UAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;;AACA,QAAI0B,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACQ,QAAP,GAAkB,CAACD,YAAnB;AACH;;AACD,WAAOP,MAAP;AACH,GAND;;AAOA,QAAMS,YAAY,GAAG,OAAOF,YAAP,EAAqBjC,IAArB,KAA8B;AAC/C,UAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;;AACA,QAAI0B,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACS,YAAP,GAAsBF,YAAtB;AACH;;AACD,WAAOP,MAAP;AACH,GAND;;AAOA,QAAMU,MAAM,GAAG,MAAOpC,IAAP,IAAgB;AAC3B,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;AACA,aAAQ0B,MAAM,KAAKG,SAAX,IAAwBH,MAAM,CAACU,MAAP,EAAhC;AACH,KAHD,MAIK;AACD,YAAMV,MAAM,GAAG,MAAMI,OAAO,EAA5B;AACA,aAAOJ,MAAM,KAAKG,SAAlB;AACH;AACJ,GATD;;AAUA,QAAMQ,SAAS,GAAG,MAAOrC,IAAP,IAAgB;AAC9B,UAAM0B,MAAM,GAAG,MAAMC,GAAG,CAAC3B,IAAD,CAAxB;;AACA,QAAI0B,MAAJ,EAAY;AACR,aAAO,CAACA,MAAM,CAACQ,QAAf;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOA,QAAMP,GAAG,GAAG,MAAO3B,IAAP,IAAgB;AACxB,UAAMsC,cAAc,EAApB;;AACA,QAAItC,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,KAAjC,EAAwC;AACpC;AACA;AACA,YAAMuC,OAAO,GAAGC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW1C,IAAX,IAAmB,CAACyC,CAAC,CAACP,QAA5B,CAApB;;AACA,UAAIK,OAAJ,EAAa;AACT,eAAOA,OAAP;AACH,OANmC,CAOpC;AACA;;;AACA,aAAOC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW1C,IAAjB,CAAX;AACH,KAVD,MAWK,IAAIA,IAAI,IAAI,IAAZ,EAAkB;AACnB;AACA;AACA,aAAOwC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,MAAF,KAAa3C,IAAnB,CAAX;AACH,KAjBuB,CAkBxB;;;AACA,UAAM0B,MAAM,GAAGc,IAAI,CAACC,CAAC,IAAI,CAACA,CAAC,CAACP,QAAT,CAAnB;;AACA,QAAIR,MAAJ,EAAY;AACR,aAAOA,MAAP;AACH,KAtBuB,CAuBxB;;;AACA,WAAOF,KAAK,CAACoB,MAAN,GAAe,CAAf,GAAmBpB,KAAK,CAAC,CAAD,CAAL,CAASqB,EAA5B,GAAiChB,SAAxC;AACH,GAzBD;AA0BA;;;;;AAGA,QAAMC,OAAO,GAAG,YAAY;AACxB,UAAMQ,cAAc,EAApB;AACA,WAAOQ,YAAY,EAAnB;AACH,GAHD;AAIA;;;;;AAGA,QAAMC,QAAQ,GAAG,YAAY;AACzB,UAAMT,cAAc,EAApB;AACA,WAAOU,YAAY,EAAnB;AACH,GAHD;AAIA;;;;;;AAIA,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMX,cAAc,EAApB;AACA,WAAOY,eAAe,EAAtB;AACH,GAHD;;AAIA,QAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC3C/B,IAAAA,cAAc,CAACgC,GAAf,CAAmBF,IAAnB,EAAyBC,SAAzB;AACH,GAFD;;AAGA,QAAME,SAAS,GAAIvD,IAAD,IAAU;AACxB,QAAIwB,KAAK,CAACgC,OAAN,CAAcxD,IAAd,IAAsB,CAA1B,EAA6B;AACzB,UAAI,CAACA,IAAI,CAACkC,QAAV,EAAoB;AAChBuB,QAAAA,cAAc,CAACzD,IAAD,CAAd;AACH;;AACDwB,MAAAA,KAAK,CAACkC,IAAN,CAAW1D,IAAX;AACH;AACJ,GAPD;;AAQA,QAAM2D,WAAW,GAAI3D,IAAD,IAAU;AAC1B,UAAM4D,KAAK,GAAGpC,KAAK,CAACgC,OAAN,CAAcxD,IAAd,CAAd;;AACA,QAAI4D,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZpC,MAAAA,KAAK,CAACqC,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACH;AACJ,GALD;;AAMA,QAAMH,cAAc,GAAIzD,IAAD,IAAU;AAC7B;AACA;AACA;AACA,UAAM0C,IAAI,GAAG1C,IAAI,CAAC0C,IAAlB;AACAlB,IAAAA,KAAK,CACAsC,MADL,CACYrB,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWA,IAAX,IAAmBD,CAAC,KAAKzC,IAD1C,EAEK+D,OAFL,CAEatB,CAAC,IAAIA,CAAC,CAACP,QAAF,GAAa,IAF/B;AAGH,GARD;;AASA,QAAM8B,QAAQ,GAAG,OAAOhE,IAAP,EAAaiE,UAAb,EAAyBC,QAAzB,KAAsC;AACnD,QAAIhB,eAAe,EAAnB,EAAuB;AACnB,aAAO,KAAP;AACH;;AACD,QAAIe,UAAJ,EAAgB;AACZ,YAAME,UAAU,GAAG,MAAMrC,OAAO,EAAhC;;AACA,UAAIqC,UAAU,IAAInE,IAAI,CAAC6C,EAAL,KAAYsB,UAA9B,EAA0C;AACtC,cAAMA,UAAU,CAACC,OAAX,CAAmB,KAAnB,EAA0B,KAA1B,CAAN;AACH;AACJ;;AACD,WAAOpE,IAAI,CAACgE,QAAL,CAAcC,UAAd,EAA0BC,QAA1B,CAAP;AACH,GAXD;;AAYA,QAAMG,gBAAgB,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACxC,UAAMC,gBAAgB,GAAGlD,cAAc,CAACK,GAAf,CAAmB2C,IAAnB,CAAzB;;AACA,QAAI,CAACE,gBAAL,EAAuB;AACnB,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;;AACD,UAAMpB,SAAS,GAAGmB,gBAAgB,CAACD,OAAD,CAAlC;AACA,WAAOlB,SAAP;AACH,GAPD;;AAQA,QAAMP,YAAY,GAAG,MAAM;AACvB,WAAON,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACiC,OAAR,CAAX;AACH,GAFD;;AAGA,QAAM1B,YAAY,GAAG,MAAM;AACvB,WAAOxB,KAAK,CAACmD,GAAN,CAAU3E,IAAI,IAAIA,IAAI,CAAC6C,EAAvB,CAAP;AACH,GAFD;;AAGA,QAAMK,eAAe,GAAG,MAAM;AAC1B,WAAO1B,KAAK,CAACoD,IAAN,CAAW5E,IAAI,IAAIA,IAAI,CAACiD,WAAxB,CAAP;AACH,GAFD;;AAGA,QAAMT,IAAI,GAAIqC,SAAD,IAAe;AACxB,UAAMC,QAAQ,GAAGtD,KAAK,CAACgB,IAAN,CAAWqC,SAAX,CAAjB;;AACA,QAAIC,QAAQ,KAAKjD,SAAjB,EAA4B;AACxB,aAAOiD,QAAQ,CAACjC,EAAhB;AACH;;AACD,WAAOhB,SAAP;AACH,GAND;;AAOA,QAAMS,cAAc,GAAG,MAAM;AACzB,WAAOyC,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAX,EACdT,GADc,CACV3E,IAAI,IAAIA,IAAI,CAACqF,gBAAL,EADE,CAAZ,CAAP;AAEH,GAHD;;AAIAlC,EAAAA,iBAAiB,CAAC,QAAD,EAAWhC,mBAAX,CAAjB;AACAgC,EAAAA,iBAAiB,CAAC,MAAD,EAASrC,iBAAT,CAAjB;AACAqC,EAAAA,iBAAiB,CAAC,SAAD,EAAYpD,oBAAZ,CAAjB;AACA;;AACA,MAAI,OAAOoF,QAAP,KAAoB,WAAxB,EAAqC;AACjCA,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,eAA1B,EAA4CC,EAAD,IAAQ;AAC/C,YAAMC,QAAQ,GAAG1C,YAAY,EAA7B;;AACA,UAAI0C,QAAJ,EAAc;AACVD,QAAAA,EAAE,CAACE,MAAH,CAAUC,QAAV,CAAmB/F,yBAAnB,EAA8C,MAAM;AAChD,iBAAO6F,QAAQ,CAAC5D,KAAT,EAAP;AACH,SAFD;AAGH;AACJ,KAPD;AAQH;;AACD,SAAO;AACHuB,IAAAA,iBADG;AAEHxB,IAAAA,GAFG;AAGHoB,IAAAA,QAHG;AAIHjB,IAAAA,OAJG;AAKHO,IAAAA,SALG;AAMHF,IAAAA,YANG;AAOHc,IAAAA,WAPG;AAQHb,IAAAA,MARG;AASHJ,IAAAA,MATG;AAUHD,IAAAA,MAVG;AAWHH,IAAAA,KAXG;AAYHH,IAAAA,IAZG;AAaHqB,IAAAA,YAbG;AAcHuB,IAAAA,gBAdG;AAeHd,IAAAA,SAfG;AAgBHI,IAAAA,WAhBG;AAiBHK,IAAAA,QAjBG;AAkBHP,IAAAA;AAlBG,GAAP;AAoBH,CA3MD;;AA4MA,MAAMkC,cAAc,GAAG,aAActE,oBAAoB,EAAzD;AAEA,SAASsE,cAAc,IAAIlD,CAA3B","sourcesContent":["import { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport { MENU_BACK_BUTTON_PRIORITY } from './hardware-back-button-784b7e3c.js';\n\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\nconst baseAnimation = (isIos) => {\n    // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n    /**\n     * \"Apply the sharp curve to items temporarily leaving the screen that may return\n     * from the same exit point. When they return, use the deceleration curve. On mobile,\n     * this transition typically occurs over 300ms\" -- MD Motion Guide\n     */\n    return createAnimation().duration(isIos ? 400 : 300);\n};\n\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\nconst menuOverlayAnimation = (menu) => {\n    let closedX;\n    let openedX;\n    const width = menu.width + 8;\n    const menuAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    if (menu.isEndSide) {\n        // right side\n        closedX = width + 'px';\n        openedX = '0px';\n    }\n    else {\n        // left side\n        closedX = -width + 'px';\n        openedX = '0px';\n    }\n    menuAnimation\n        .addElement(menu.menuInnerEl)\n        .fromTo('transform', `translateX(${closedX})`, `translateX(${openedX})`);\n    const mode = getIonMode(menu);\n    const isIos = mode === 'ios';\n    const opacity = isIos ? 0.2 : 0.25;\n    backdropAnimation\n        .addElement(menu.backdropEl)\n        .fromTo('opacity', 0.01, opacity);\n    return baseAnimation(isIos).addAnimation([menuAnimation, backdropAnimation]);\n};\n\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\nconst menuPushAnimation = (menu) => {\n    let contentOpenedX;\n    let menuClosedX;\n    const mode = getIonMode(menu);\n    const width = menu.width;\n    if (menu.isEndSide) {\n        contentOpenedX = -width + 'px';\n        menuClosedX = width + 'px';\n    }\n    else {\n        contentOpenedX = width + 'px';\n        menuClosedX = -width + 'px';\n    }\n    const menuAnimation = createAnimation()\n        .addElement(menu.menuInnerEl)\n        .fromTo('transform', `translateX(${menuClosedX})`, 'translateX(0px)');\n    const contentAnimation = createAnimation()\n        .addElement(menu.contentEl)\n        .fromTo('transform', 'translateX(0px)', `translateX(${contentOpenedX})`);\n    const backdropAnimation = createAnimation()\n        .addElement(menu.backdropEl)\n        .fromTo('opacity', 0.01, 0.32);\n    return baseAnimation(mode === 'ios').addAnimation([menuAnimation, contentAnimation, backdropAnimation]);\n};\n\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\nconst menuRevealAnimation = (menu) => {\n    const mode = getIonMode(menu);\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\n    const contentOpen = createAnimation()\n        .addElement(menu.contentEl) // REVIEW\n        .fromTo('transform', 'translateX(0px)', `translateX(${openedX})`);\n    return baseAnimation(mode === 'ios').addAnimation(contentOpen);\n};\n\nconst createMenuController = () => {\n    const menuAnimations = new Map();\n    const menus = [];\n    const open = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return menuEl.open();\n        }\n        return false;\n    };\n    const close = async (menu) => {\n        const menuEl = await (menu !== undefined ? get(menu) : getOpen());\n        if (menuEl !== undefined) {\n            return menuEl.close();\n        }\n        return false;\n    };\n    const toggle = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return menuEl.toggle();\n        }\n        return false;\n    };\n    const enable = async (shouldEnable, menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            menuEl.disabled = !shouldEnable;\n        }\n        return menuEl;\n    };\n    const swipeGesture = async (shouldEnable, menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            menuEl.swipeGesture = shouldEnable;\n        }\n        return menuEl;\n    };\n    const isOpen = async (menu) => {\n        if (menu != null) {\n            const menuEl = await get(menu);\n            return (menuEl !== undefined && menuEl.isOpen());\n        }\n        else {\n            const menuEl = await getOpen();\n            return menuEl !== undefined;\n        }\n    };\n    const isEnabled = async (menu) => {\n        const menuEl = await get(menu);\n        if (menuEl) {\n            return !menuEl.disabled;\n        }\n        return false;\n    };\n    const get = async (menu) => {\n        await waitUntilReady();\n        if (menu === 'start' || menu === 'end') {\n            // there could be more than one menu on the same side\n            // so first try to get the enabled one\n            const menuRef = find(m => m.side === menu && !m.disabled);\n            if (menuRef) {\n                return menuRef;\n            }\n            // didn't find a menu side that is enabled\n            // so try to get the first menu side found\n            return find(m => m.side === menu);\n        }\n        else if (menu != null) {\n            // the menuId was not left or right\n            // so try to get the menu by its \"id\"\n            return find(m => m.menuId === menu);\n        }\n        // return the first enabled menu\n        const menuEl = find(m => !m.disabled);\n        if (menuEl) {\n            return menuEl;\n        }\n        // get the first menu in the array, if one exists\n        return menus.length > 0 ? menus[0].el : undefined;\n    };\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    const getOpen = async () => {\n        await waitUntilReady();\n        return _getOpenSync();\n    };\n    /**\n     * Get all menu instances.\n     */\n    const getMenus = async () => {\n        await waitUntilReady();\n        return getMenusSync();\n    };\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    const isAnimating = async () => {\n        await waitUntilReady();\n        return isAnimatingSync();\n    };\n    const registerAnimation = (name, animation) => {\n        menuAnimations.set(name, animation);\n    };\n    const _register = (menu) => {\n        if (menus.indexOf(menu) < 0) {\n            if (!menu.disabled) {\n                _setActiveMenu(menu);\n            }\n            menus.push(menu);\n        }\n    };\n    const _unregister = (menu) => {\n        const index = menus.indexOf(menu);\n        if (index > -1) {\n            menus.splice(index, 1);\n        }\n    };\n    const _setActiveMenu = (menu) => {\n        // if this menu should be enabled\n        // then find all the other menus on this same side\n        // and automatically disable other same side menus\n        const side = menu.side;\n        menus\n            .filter(m => m.side === side && m !== menu)\n            .forEach(m => m.disabled = true);\n    };\n    const _setOpen = async (menu, shouldOpen, animated) => {\n        if (isAnimatingSync()) {\n            return false;\n        }\n        if (shouldOpen) {\n            const openedMenu = await getOpen();\n            if (openedMenu && menu.el !== openedMenu) {\n                await openedMenu.setOpen(false, false);\n            }\n        }\n        return menu._setOpen(shouldOpen, animated);\n    };\n    const _createAnimation = (type, menuCmp) => {\n        const animationBuilder = menuAnimations.get(type);\n        if (!animationBuilder) {\n            throw new Error('animation not registered');\n        }\n        const animation = animationBuilder(menuCmp);\n        return animation;\n    };\n    const _getOpenSync = () => {\n        return find(m => m._isOpen);\n    };\n    const getMenusSync = () => {\n        return menus.map(menu => menu.el);\n    };\n    const isAnimatingSync = () => {\n        return menus.some(menu => menu.isAnimating);\n    };\n    const find = (predicate) => {\n        const instance = menus.find(predicate);\n        if (instance !== undefined) {\n            return instance.el;\n        }\n        return undefined;\n    };\n    const waitUntilReady = () => {\n        return Promise.all(Array.from(document.querySelectorAll('ion-menu'))\n            .map(menu => menu.componentOnReady()));\n    };\n    registerAnimation('reveal', menuRevealAnimation);\n    registerAnimation('push', menuPushAnimation);\n    registerAnimation('overlay', menuOverlayAnimation);\n    /* tslint:disable-next-line */\n    if (typeof document !== 'undefined') {\n        document.addEventListener('ionBackButton', (ev) => {\n            const openMenu = _getOpenSync();\n            if (openMenu) {\n                ev.detail.register(MENU_BACK_BUTTON_PRIORITY, () => {\n                    return openMenu.close();\n                });\n            }\n        });\n    }\n    return {\n        registerAnimation,\n        get,\n        getMenus,\n        getOpen,\n        isEnabled,\n        swipeGesture,\n        isAnimating,\n        isOpen,\n        enable,\n        toggle,\n        close,\n        open,\n        _getOpenSync,\n        _createAnimation,\n        _register,\n        _unregister,\n        _setOpen,\n        _setActiveMenu,\n    };\n};\nconst menuController = /*@__PURE__*/ createMenuController();\n\nexport { menuController as m };\n"]},"metadata":{},"sourceType":"module"}