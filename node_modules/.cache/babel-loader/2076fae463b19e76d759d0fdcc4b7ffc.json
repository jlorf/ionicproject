{"ast":null,"code":"var _jsxFileName = \"/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context from '../../data/context';\nimport classes from './AllActivities.module.css';\nimport CompleteModalActivity from '../../components/CompleteActivityModal';\nimport { checkmarkOutline } from 'ionicons/icons';\n\nconst AllActivities = () => {\n  _s();\n\n  const [activityToComplete, setActivityToComplete] = useState();\n  const context = useContext(Context);\n\n  const openCompleteModal = activity => {\n    setActivityToComplete(activity);\n  };\n\n  const closeModal = () => {\n    setActivityToComplete(undefined);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: !!activityToComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CompleteModalActivity, {\n    activity: activityToComplete,\n    dismissModal: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonMenuButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Moduls\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, context.activities.map(activity => /*#__PURE__*/React.createElement(IonRow, {\n    key: activity.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: activity.imageUrl,\n    alt: \"Activity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(IonCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IonCardSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, activity.hour), /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, activity.title)), /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, activity.description), /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, !activity.isCompleted ? /*#__PURE__*/React.createElement(IonButton, {\n    className: classes.CenterElement,\n    fill: \"clear\",\n    onClick: () => openCompleteModal(activity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 45\n    }\n  }, \"Complete Activity\") : /*#__PURE__*/React.createElement(IonIcon, {\n    color: \"success\",\n    className: classes.CenterElement,\n    icon: checkmarkOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  })))))))))));\n};\n\n_s(AllActivities, \"0zG1AS9Cy+C0mmQf2/a28u3WGJo=\");\n\n_c = AllActivities;\nexport default AllActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllActivities\");","map":{"version":3,"sources":["/home/joel/projecteionic/src/pages/AllActivities/AllActivities.tsx"],"names":["React","useContext","useState","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","IonGrid","IonButtons","IonMenuButton","IonRow","IonCol","IonCard","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCardContent","IonItem","IonButton","IonModal","IonIcon","Context","classes","CompleteModalActivity","checkmarkOutline","AllActivities","activityToComplete","setActivityToComplete","context","openCompleteModal","activity","closeModal","undefined","activities","map","id","imageUrl","hour","title","description","isCompleted","CenterElement"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonGrid, IonButtons, IonMenuButton, IonRow, IonCol, IonCard, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCardContent, IonItem, IonButton, IonModal, IonIcon } from '@ionic/react';\nimport Context, { Activity } from '../../data/context';\nimport classes from './AllActivities.module.css';\nimport CompleteModalActivity from '../../components/CompleteActivityModal';\nimport { checkmarkOutline } from 'ionicons/icons';\n\nconst AllActivities: React.FC = () => {\n\n    const [activityToComplete, setActivityToComplete] = useState<Activity>();\n\n    const context = useContext(Context);\n\n    const openCompleteModal = (activity: Activity) => {\n        setActivityToComplete(activity);\n    };\n\n    const closeModal = () => {\n        setActivityToComplete(undefined);\n    };\n\n    return (\n        <React.Fragment>\n            <IonModal isOpen={!!activityToComplete}>\n                <CompleteModalActivity activity={activityToComplete as Activity} dismissModal={closeModal}/>\n            </IonModal>\n\n            <IonPage>\n                <IonHeader>\n                    <IonToolbar>\n                        <IonButtons slot=\"start\">\n                            <IonMenuButton />\n                        </IonButtons>\n                        <IonTitle>Moduls</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n                <IonContent>\n                    <IonGrid>\n                        { context.activities.map(activity => (\n                        <IonRow key={activity.id}>\n                            <IonCol className=\"ion-text-center\">\n                                <IonCard>\n                                    <img src={activity.imageUrl} alt=\"Activity\"/>\n                                    <IonCardHeader>\n                                        <IonCardSubtitle>{activity.hour}</IonCardSubtitle>\n                                        <IonCardTitle>{activity.title}</IonCardTitle>\n                                    </IonCardHeader>\n                                    <IonCardContent>\n                                        <p>{activity.description}</p>\n                                        <IonItem lines=\"none\">\n                                            { !activity.isCompleted ?\n                                            <IonButton\n                                                className={classes.CenterElement}\n                                                fill=\"clear\"\n                                                onClick={() => openCompleteModal(activity)}>\n                                                Complete Activity\n                                            </IonButton>\n                                            :\n                                            <IonIcon color=\"success\" className={classes.CenterElement} icon={checkmarkOutline} />\n                                            }\n                                        </IonItem>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonCol>\n                        </IonRow>\n                        ))\n                        }\n                    </IonGrid>\n                </IonContent>\n            </IonPage>\n        </React.Fragment>\n    );\n};\n\nexport default AllActivities;"]},"metadata":{},"sourceType":"module"}