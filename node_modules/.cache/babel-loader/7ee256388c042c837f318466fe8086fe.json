{"ast":null,"code":"import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-d8b49b57.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\nconst Input = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-input-${inputIds++}`;\n    this.didBlurAfterEdit = false;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     */\n\n    this.autocapitalize = 'off';\n    /**\n     * Indicates whether the value of the control can be automatically completed by the browser.\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\n     */\n\n    this.autocorrect = 'off';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n     */\n\n    this.clearInput = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n     */\n\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * The type of control to display. The default type is text.\n     */\n\n    this.type = 'text';\n    /**\n     * The value of the input.\n     */\n\n    this.value = '';\n\n    this.onInput = ev => {\n      const input = ev.target;\n\n      if (input) {\n        this.value = input.value || '';\n      }\n\n      this.ionInput.emit(ev);\n    };\n\n    this.onBlur = () => {\n      this.hasFocus = false;\n      this.focusChanged();\n      this.emitStyle();\n      this.ionBlur.emit();\n    };\n\n    this.onFocus = () => {\n      this.hasFocus = true;\n      this.focusChanged();\n      this.emitStyle();\n      this.ionFocus.emit();\n    };\n\n    this.onKeydown = ev => {\n      if (this.shouldClearOnEdit()) {\n        // Did the input value change after it was blurred and edited?\n        // Do not clear if user is hitting Enter to submit form\n        if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\n          // Clear the input\n          this.clearTextInput();\n        } // Reset the flag\n\n\n        this.didBlurAfterEdit = false;\n      }\n    };\n\n    this.clearTextInput = ev => {\n      if (this.clearInput && !this.readonly && !this.disabled && ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n\n      this.value = '';\n      /**\n       * This is needed for clearOnEdit\n       * Otherwise the value will not be cleared\n       * if user is inside the input\n       */\n\n      if (this.nativeInput) {\n        this.nativeInput.value = '';\n      }\n    };\n\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  debounceChanged() {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n  /**\n   * Update the native input element when the value changes\n   */\n\n\n  valueChanged() {\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value == null ? this.value : this.value.toString()\n    });\n  }\n\n  connectedCallback() {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  }\n\n  disconnectedCallback() {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  }\n  /**\n   * Sets focus on the specified `ion-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  }\n  /**\n   * Returns the native `<input>` element used under the hood.\n   */\n\n\n  getInputElement() {\n    return Promise.resolve(this.nativeInput);\n  }\n\n  shouldClearOnEdit() {\n    const {\n      type,\n      clearOnEdit\n    } = this;\n    return clearOnEdit === undefined ? type === 'password' : clearOnEdit;\n  }\n\n  getValue() {\n    return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'input': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus,\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  focusChanged() {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n  }\n\n  hasValue() {\n    return this.getValue().length > 0;\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    const value = this.getValue();\n    const labelId = this.inputId + '-lbl';\n    const label = findItemLabel(this.el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      \"aria-disabled\": this.disabled ? 'true' : null,\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), {\n        [mode]: true,\n        'has-value': this.hasValue(),\n        'has-focus': this.hasFocus\n      })\n    }, h(\"input\", {\n      class: \"native-input\",\n      ref: input => this.nativeInput = input,\n      \"aria-labelledby\": labelId,\n      disabled: this.disabled,\n      accept: this.accept,\n      autoCapitalize: this.autocapitalize,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      inputMode: this.inputmode,\n      min: this.min,\n      max: this.max,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      multiple: this.multiple,\n      name: this.name,\n      pattern: this.pattern,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellCheck: this.spellcheck,\n      step: this.step,\n      size: this.size,\n      type: this.type,\n      value: value,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeydown\n    }), this.clearInput && !this.readonly && !this.disabled && h(\"button\", {\n      type: \"button\",\n      class: \"input-clear-icon\",\n      tabindex: \"-1\",\n      onTouchStart: this.clearTextInput,\n      onMouseDown: this.clearTextInput\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"debounce\": [\"debounceChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n};\nlet inputIds = 0;\nInput.style = {\n  /*STENCIL:MODE:ios*/\n  ios: inputIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: inputMdCss\n};\nexport { Input as ion_input };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/ion-input-ios.entry.js"],"names":["r","registerInstance","d","createEvent","h","H","Host","e","getElement","b","getIonMode","debounceEvent","f","findItemLabel","c","createColorClasses","inputIosCss","inputMdCss","Input","constructor","hostRef","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","preventDefault","stopPropagation","nativeInput","ionChange","ionStyle","debounceChanged","disabledChanged","valueChanged","toString","connectedCallback","document","dispatchEvent","CustomEvent","detail","el","disconnectedCallback","setFocus","focus","getInputElement","Promise","resolve","clearOnEdit","undefined","getValue","placeholder","length","render","mode","labelId","label","id","class","Object","assign","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","watchers","style","ios","md","ion_input"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-d8b49b57.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\n\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\n\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\n\nconst Input = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${inputIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            const input = ev.target;\n            if (input) {\n                this.value = input.value || '';\n            }\n            this.ionInput.emit(ev);\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionBlur.emit();\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionFocus.emit();\n        };\n        this.onKeydown = (ev) => {\n            if (this.shouldClearOnEdit()) {\n                // Did the input value change after it was blurred and edited?\n                // Do not clear if user is hitting Enter to submit form\n                if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\n                    // Clear the input\n                    this.clearTextInput();\n                }\n                // Reset the flag\n                this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextInput = (ev) => {\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (this.nativeInput) {\n                this.nativeInput.value = '';\n            }\n        };\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    shouldClearOnEdit() {\n        const { type, clearOnEdit } = this;\n        return (clearOnEdit === undefined)\n            ? type === 'password'\n            : clearOnEdit;\n    }\n    getValue() {\n        return typeof this.value === 'number' ? this.value.toString() :\n            (this.value || '').toString();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    focusChanged() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    }\n    hasValue() {\n        return this.getValue().length > 0;\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'has-value': this.hasValue(), 'has-focus': this.hasFocus }) }, h(\"input\", { class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet inputIds = 0;\nInput.style = {\n    /*STENCIL:MODE:ios*/ ios: inputIosCss,\n    /*STENCIL:MODE:md*/ md: inputMdCss\n};\n\nexport { Input as ion_input };\n"]},"metadata":{},"sourceType":"module"}