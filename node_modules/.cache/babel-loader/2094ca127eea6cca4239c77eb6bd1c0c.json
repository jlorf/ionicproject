{"ast":null,"code":"/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  const engine = window.TapticEngine;\n\n  if (engine) {\n    engine.selection();\n  }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\n\n\nconst hapticSelectionStart = () => {\n  const engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionStart();\n  }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\n\n\nconst hapticSelectionChanged = () => {\n  const engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionChanged();\n  }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\n\n\nconst hapticSelectionEnd = () => {\n  const engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionEnd();\n  }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };","map":{"version":3,"sources":["/home/joel/projecteionic/node_modules/@ionic/core/dist/esm-es5/haptic-ccbda579.js"],"names":["hapticSelection","engine","window","TapticEngine","selection","hapticSelectionStart","gestureSelectionStart","hapticSelectionChanged","gestureSelectionChanged","hapticSelectionEnd","gestureSelectionEnd","a","b","c","h"],"mappings":"AAAA;;;;;AAIA;;;;AAIA,MAAMA,eAAe,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAGC,MAAM,CAACC,YAAtB;;AACA,MAAIF,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACG,SAAP;AACH;AACJ,CALD;AAMA;;;;;AAGA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAMJ,MAAM,GAAGC,MAAM,CAACC,YAAtB;;AACA,MAAIF,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACK,qBAAP;AACH;AACJ,CALD;AAMA;;;;;AAGA,MAAMC,sBAAsB,GAAG,MAAM;AACjC,QAAMN,MAAM,GAAGC,MAAM,CAACC,YAAtB;;AACA,MAAIF,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACO,uBAAP;AACH;AACJ,CALD;AAMA;;;;;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAMR,MAAM,GAAGC,MAAM,CAACC,YAAtB;;AACA,MAAIF,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACS,mBAAP;AACH;AACJ,CALD;;AAOA,SAASL,oBAAoB,IAAIM,CAAjC,EAAoCJ,sBAAsB,IAAIK,CAA9D,EAAiEH,kBAAkB,IAAII,CAAvF,EAA0Fb,eAAe,IAAIc,CAA7G","sourcesContent":["/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n"]},"metadata":{},"sourceType":"module"}